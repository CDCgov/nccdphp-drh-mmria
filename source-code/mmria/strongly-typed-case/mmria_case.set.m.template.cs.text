
using System;
using System.Collections.Generic;
using System.Linq;

namespace mmria.case_version.v241001;

public sealed partial class mmria_case
{


    public bool SetM_String(string path, int index, string value)
    {
        bool result = false;
        try
        {
            switch(path.ToLower())
            {
    //{set_string}
                default:
                break;
            };
        }
        catch(Exception)
        {

        }

        
        return result;
    }

    public bool SetM_Double(string path, int index, double? value)
    {
        bool result = false;
        try
        {
            switch(path.ToLower())
            {
    //{set_double}
                default:
                break;
            };
        }
        catch(Exception)
        {

        }

        
        return result;
    }

    public bool SetM_Boolean(string path, int index, bool? value)
    {
        bool result = false;
        try
        {
            switch(path.ToLower())
            {
    //{set_boolean}
                default:
                break;
            };
        }
        catch(Exception)
        {

        }

        
        return result;
    }

    public bool SetM_List_Of_Double(string path, int index, List<double> value)
    {
        bool result = false;
        try
        {
            switch(path.ToLower())
            {
    //{set_list_of_double}
                default:
                break;
            };
        }
        catch(Exception)
        {

        }

        
        return result;
    }

    
    public bool SetM_List_Of_String(string path, int index, List<string> value)
    {
        bool result = false;
        try
        {
            switch(path.ToLower())
            {
    //{set_list_of_string}
                default:
                break;
            };
            

        }
       
        catch(Exception)
        {

        }
        
        return result;
    }

    public bool SetM_Datetime(string path, int index, DateTime? value)
    {
        bool result = false;
        try
        {
            switch(path.ToLower())
            {
    //{set_datetime}
                default:
                break;
            };
        }
        catch(Exception)
        {

        }

        
        return result;
    }


    public bool SetM_Date_Only(string path, int index, DateOnly? value)
    {
        bool result = false;
        try
        {
            switch(path.ToLower())
            {
    //{set_date_only}
                default:
                break;
            };
        }
        catch(Exception)
        {

        }

        
        return result;
    }


    public bool SetM_Time_Only(string path, int index, TimeOnly? value)
    {
        bool result = false;
        try
        {
            switch(path.ToLower())
            {
    //{set_time_only}
                default:
                break;
            };
        }
        catch(Exception)
        {

        }

        
        return result;
    }


}