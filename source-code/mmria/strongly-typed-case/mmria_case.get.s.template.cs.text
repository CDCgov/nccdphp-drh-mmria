
using System;
using System.Collections.Generic;
using System.Linq;

namespace mmria.case_version.v1;

public sealed partial class mmria_case
{


    public string? GetSS_String(string path)
    {
        string? result = null;
        try
        {
            result = path.ToLower() switch
            {
    //{get_string}
                _ => null
            };
        }
        catch(Exception)
        {
            
        }
        return result;
    }

    public double? GetSS_Double(string path)
    {
        double? result = null;
        try
        {
            result = path.ToLower() switch
            {
    //{get_double}
                _ => null
            };        
        }
        catch(Exception)
        {
            
        }


        
        return result;
    }

    public bool? GetSS_Boolean(string path)
    {
        bool? result = null;
        try
        {
            result = path.ToLower() switch
            {
    //{get_boolean}
                _ => null
            };
        }
        catch(Exception)
        {
            
        }

        
        return result;
    }

    public List<double>? GetSS_List_Of_Double(string path)
    {
        List<double>? result = null;
        try
        {
            result = path.ToLower() switch
            {
    //{get_list_of_double}
                _ => null
            };        
        }
        catch(Exception)
        {
            
        }


        
        return result;
    }

    
    public List<string>? GetSS_List_Of_String(string path)
    {
        List<string>? result = null;
        try
        {
            result = path.ToLower() switch
            {
    //{get_list_of_string}
                _ => null
            };        
        }
        catch(Exception)
        {
            
        }

        
        return result;
    }

    public DateTime? GetSS_Datetime(string path)
    {
        DateTime? result = null;
        try
        {
            result = path.ToLower() switch
            {
    //{get_datetime}
                _ => null
            };        
        }
        catch(Exception)
        {
            
        }

        
        return result;
    }


    public DateOnly? GetSS_Date_Only(string path)
    {
        DateOnly? result = null;
        try
        {
            result = path.ToLower() switch
            {
    //{get_date_only}
                _ => null
            };
        }
        catch(Exception)
        {
            
        }

        
        return result;
    }


    public TimeOnly? GetSS_Time_Only(string path)
    {
        TimeOnly? result = null;
        try
        {
            result = path.ToLower() switch
            {
    //{get_time_only}
                _ => null
            };
                    
        }
        catch(Exception)
        {
            
        }

        return result;
    }


}