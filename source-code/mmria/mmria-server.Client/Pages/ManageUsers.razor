@page "/SearchUserList"
@using mmria.common.couchdb;

@*

@using Microsoft.AspNetCore.Http;
@using  mmria.server.extension;
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor; 

*@


@using System.Net.Http
@inject NavigationManager NavigationManager
@inject mmria.common.couchdb.OverridableConfiguration _configuration;
@inject HttpClient http_client

<PageTitle>Manage Users</PageTitle>

<h1>Manage Users</h1>
<h2>User List</h2>

<br/>

<table>
    <tr>
        <td>
            <select>
                <option>Abstractor</option>
                <option>Analyst</option>
                <option>Committee Member</option>
                
            </select> 
        </td>
        <td><input type="text" placeholder="Search" /></td>
        <td>Showing 1-20 of 200 users &lt;&lt; | &lt; | 1 | &gt; | &gt;&gt; </td>
        <td><input type="button" value="Add New User" /></td>
    </tr>
</table>


<table border=1>
    <tr style="background-color: #b890bb;">
        <th>Username (Email Address) (down arrow)</th>
        <th>Role(s)</th>
        <th>Actions</th>
    </tr>


    @foreach(var user in user_list)
    {
        <tr>
            <td>@user.name</td>
            <td>
                
                Abstractor / Case Folder / Active<br/>
                <i>Committee Member / Case Folder / Inactive</i>
                
            </td>
            <td>
                <input type="button" value="Set All Roles to inactive" /><br/>
                <input type="button" value="Delete" />
            </td>
        </tr>
    }


</table>

<table>
    <tr>
        <td>
            &nbsp;
        </td>
        <td>&nbsp;</td>
        <td>Showing 1-20 of 200 users &lt;&lt; | &lt; | 1 | &gt; | &gt;&gt; </td>
        <td><input type="button" value="Add New User" /></td>
    </tr>
</table>

@code{
    /*

3 main 
    mmria.common.couchdb.jurisdiction
    mmria.common.couchdb.user
    mmria.common.couchdb.user-role-jurisdiction
*/

mmria.common.couchdb.OverridableConfiguration configuration;
mmria.common.couchdb.DBConfigurationDetail db_config;
string host_prefix = null;
string userName = "";


string base_url = null;

List<mmria.common.model.couchdb.user> user_list = new();
List<mmria.common.model.couchdb.user_role_jurisdiction> user_role_juridiction_list = new();
List<mmria.common.model.couchdb.jurisdiction_tree> case_folder_list = new();
List<string> role_list = new();

mmria.common.model.couchdb.user user;

    protected override async Task OnInitializedAsync()
    {
        base_url = NavigationManager.BaseUri;

/*
/api/policyvalues
/api/user_role_jurisdiction_view/my-roles
/api/user

*/
        user = await GetFromAPI<mmria.common.model.couchdb.user>("api/user/my-user");
        user_list = await GetFromAPI<List<mmria.common.model.couchdb.user>>("api/user");
        user_role_juridiction_list= await GetFromAPI<List<mmria.common.model.couchdb.user_role_jurisdiction>>("api/user");

    }

    public async Task<T> GetFromAPI<T>(string p_url)
    {
            var result = default(T);

            try
            {
                var url = $"{NavigationManager.BaseUri}{p_url}";
                //http_client.DefaultRequestHeaders.Accept
                //    .Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/json"));

                var response = await http_client.GetAsync(url);
                response.EnsureSuccessStatusCode();

                var json = await response.Content.ReadAsStringAsync();

                result = System.Text.Json.JsonSerializer.Deserialize<T>(json);

                //result_text = $"{json} \n\nThe user:\n{user.name} {user._id}\nNavigationManager: {base_url}\nBaseAddress: {config["BaseAddress"]} \nmmria_settings:couchdb_url = {config["mmria_settings:couchdb_url"]}";
        
            }
            catch(System.Exception ex)
            {

            }

            return result;
    }



}