//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.0.20.0 (Newtonsoft.Json v10.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace AwesomeSauce.v1
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum State
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AL")]
        Alabama = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AK")]
        Alaska = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AZ")]
        Arizona = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AR")]
        Arkansas = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CA")]
        California = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CO")]
        Colorado = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CT")]
        Connecticut = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DE")]
        Delaware = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DC")]
        District_of_Columbia = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FL")]
        Florida = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GA")]
        Georgia = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"HI")]
        Hawaii = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ID")]
        Idaho = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IL")]
        Illinois = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IN")]
        Indiana = 15,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IA")]
        Iowa = 16,
    
        [System.Runtime.Serialization.EnumMember(Value = @"KS")]
        Kansas = 17,
    
        [System.Runtime.Serialization.EnumMember(Value = @"KY")]
        Kentucky = 18,
    
        [System.Runtime.Serialization.EnumMember(Value = @"LA")]
        Louisiana = 19,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ME")]
        Maine = 20,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MD")]
        Maryland = 21,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MA")]
        Massachusetts = 22,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MI")]
        Michigan = 23,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MN")]
        Minnesota = 24,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MS")]
        Mississippi = 25,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MO")]
        Missouri = 26,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MT")]
        Montana = 27,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NE")]
        Nebraska = 28,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NV")]
        Nevada = 29,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NH")]
        New_Hampshire = 30,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NJ")]
        New_Jersey = 31,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NM")]
        New_Mexico = 32,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NY")]
        New_York = 33,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NC")]
        North_Carolina = 34,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ND")]
        North_Dakota = 35,
    
        [System.Runtime.Serialization.EnumMember(Value = @"OH")]
        Ohio = 36,
    
        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        Oklahoma = 37,
    
        [System.Runtime.Serialization.EnumMember(Value = @"OR")]
        Oregon = 38,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PA")]
        Pennsylvania = 39,
    
        [System.Runtime.Serialization.EnumMember(Value = @"RI")]
        Rhode_Island = 40,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SC")]
        South_Carolina = 41,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SD")]
        South_Dakota = 42,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TN")]
        Tennessee = 43,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TX")]
        Texas = 44,
    
        [System.Runtime.Serialization.EnumMember(Value = @"UT")]
        Utah = 45,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VT")]
        Vermont = 46,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VA")]
        Virginia = 47,
    
        [System.Runtime.Serialization.EnumMember(Value = @"WA")]
        Washington = 48,
    
        [System.Runtime.Serialization.EnumMember(Value = @"WV")]
        West_Virginia = 49,
    
        [System.Runtime.Serialization.EnumMember(Value = @"WI")]
        Wisconsin = 50,
    
        [System.Runtime.Serialization.EnumMember(Value = @"WY")]
        Wyoming = 51,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AS")]
        American_Samoa = 52,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GU")]
        Guam = 53,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MH")]
        Marshall_Islands = 54,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MP")]
        Northern_Marianas = 55,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PR")]
        Puerto_Rico = 56,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PW")]
        Palau = 57,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VI")]
        Virgin_Islands = 58,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Country
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"US")]
        United_States = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AF")]
        Afghanistan = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AL")]
        Albania = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AG")]
        Algeria = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AQ")]
        American_Samoa = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AN")]
        Andorra = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AO")]
        Angola = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AV")]
        Anguilla = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AY")]
        Antarctica = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AC")]
        Antigua___Barbuda = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AR")]
        Argentina = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AM")]
        Armenia = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AA")]
        Aruba = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AS")]
        Australia = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AU")]
        Austria = 15,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AJ")]
        Azerbaijan = 16,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BF")]
        The_Bahamas = 17,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BA")]
        Bahrain = 18,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FQ")]
        Baker_I_ = 19,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BG")]
        Bangladesh = 20,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BB")]
        Barbados = 21,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BO")]
        Belarus = 22,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BE")]
        Belgium = 23,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BH")]
        Belize = 24,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BN")]
        Benin = 25,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BD")]
        Bermuda = 26,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BT")]
        Bhutan = 27,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BL")]
        Bolivia = 28,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BK")]
        Bosnia___Herzegovina = 29,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BC")]
        Botswana = 30,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BV")]
        Bouvet_I_ = 31,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BR")]
        Brazil = 32,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IO")]
        British_Indian_Ocean_Territory = 33,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VI")]
        British_Virgin_Is_ = 34,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BX")]
        Brunei = 35,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BU")]
        Bulgaria = 36,
    
        [System.Runtime.Serialization.EnumMember(Value = @"UV")]
        Burkina_Faso = 37,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BM")]
        Myanmar = 38,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BY")]
        Burundi = 39,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CB")]
        Cambodia = 40,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CM")]
        Cameroon = 41,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CA")]
        Canada = 42,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CV")]
        Cape_Verde = 43,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CJ")]
        Cayman_Is_ = 44,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CT")]
        Central_African_Republic = 45,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CD")]
        Chad = 46,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CI")]
        Chile = 47,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CH")]
        China = 48,
    
        [System.Runtime.Serialization.EnumMember(Value = @"KT")]
        Christmas_I_ = 49,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CK")]
        Cocos_Is_ = 50,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CO")]
        Colombia = 51,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CN")]
        Comoros = 52,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CF")]
        Congo = 53,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CW")]
        Cook_Is_ = 54,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CS")]
        Costa_Rica = 55,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IV")]
        Cote_d_Ivoire = 56,
    
        [System.Runtime.Serialization.EnumMember(Value = @"HR")]
        Croatia = 57,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CU")]
        Cuba = 58,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CY")]
        Cyprus = 59,
    
        [System.Runtime.Serialization.EnumMember(Value = @"EZ")]
        Czech_Republic = 60,
    
        [System.Runtime.Serialization.EnumMember(Value = @"KN")]
        North_Korea = 61,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CG")]
        Congo__DRC = 62,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DA")]
        Denmark = 63,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DJ")]
        Djibouti = 64,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DO")]
        Dominica = 65,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DR")]
        Dominican_Republic = 66,
    
        [System.Runtime.Serialization.EnumMember(Value = @"EC")]
        Ecuador = 67,
    
        [System.Runtime.Serialization.EnumMember(Value = @"EG")]
        Egypt = 68,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ES")]
        El_Salvador = 69,
    
        [System.Runtime.Serialization.EnumMember(Value = @"EK")]
        Equatorial_Guinea = 70,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ER")]
        Eritrea = 71,
    
        [System.Runtime.Serialization.EnumMember(Value = @"EN")]
        Estonia = 72,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ET")]
        Ethiopia = 73,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FK")]
        Falkland_Is_ = 74,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FO")]
        Faroe_Is_ = 75,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FJ")]
        Fiji = 76,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FI")]
        Finland = 77,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FR")]
        France = 78,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FG")]
        French_Guiana = 79,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FP")]
        French_Polynesia = 80,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FS")]
        French_Southern___Antarctic_Lands = 81,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GB")]
        Gabon = 82,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GA")]
        The_Gambia = 83,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GZ")]
        Gaza_Strip = 84,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GG")]
        Georgia = 85,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GM")]
        Germany = 86,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GH")]
        Ghana = 87,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GI")]
        Gibraltar = 88,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GO")]
        Glorioso_Is_ = 89,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GR")]
        Greece = 90,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GL")]
        Greenland = 91,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GJ")]
        Grenada = 92,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GP")]
        Guadeloupe = 93,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GQ")]
        Guam = 94,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GT")]
        Guatemala = 95,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GK")]
        Guernsey = 96,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GV")]
        GVGuinea = 97,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PU")]
        PUGuinea = 98,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GY")]
        Guyana = 99,
    
        [System.Runtime.Serialization.EnumMember(Value = @"HA")]
        Haiti = 100,
    
        [System.Runtime.Serialization.EnumMember(Value = @"HM")]
        Heard_I____McDonald_Is_ = 101,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VT")]
        Vatican_City = 102,
    
        [System.Runtime.Serialization.EnumMember(Value = @"HO")]
        Honduras = 103,
    
        [System.Runtime.Serialization.EnumMember(Value = @"HQ")]
        Howland_I_ = 104,
    
        [System.Runtime.Serialization.EnumMember(Value = @"HU")]
        Hungary = 105,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IC")]
        Iceland = 106,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IN")]
        India = 107,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ID")]
        Indonesia = 108,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IR")]
        Iran = 109,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IZ")]
        Iraq = 110,
    
        [System.Runtime.Serialization.EnumMember(Value = @"EI")]
        Ireland = 111,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IM")]
        Isle_of_Man = 112,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IS")]
        Israel = 113,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IT")]
        Italy = 114,
    
        [System.Runtime.Serialization.EnumMember(Value = @"JM")]
        Jamaica = 115,
    
        [System.Runtime.Serialization.EnumMember(Value = @"JA")]
        Japan = 116,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DQ")]
        Jarvis_I_ = 117,
    
        [System.Runtime.Serialization.EnumMember(Value = @"JE")]
        Jersey = 118,
    
        [System.Runtime.Serialization.EnumMember(Value = @"JQ")]
        Johnston_Atoll = 119,
    
        [System.Runtime.Serialization.EnumMember(Value = @"JO")]
        Jordan = 120,
    
        [System.Runtime.Serialization.EnumMember(Value = @"JU")]
        Juan_De_Nova_I_ = 121,
    
        [System.Runtime.Serialization.EnumMember(Value = @"KZ")]
        Kazakhstan = 122,
    
        [System.Runtime.Serialization.EnumMember(Value = @"KE")]
        Kenya = 123,
    
        [System.Runtime.Serialization.EnumMember(Value = @"KR")]
        Kiribati = 124,
    
        [System.Runtime.Serialization.EnumMember(Value = @"KU")]
        Kuwait = 125,
    
        [System.Runtime.Serialization.EnumMember(Value = @"KG")]
        Kyrgyzstan = 126,
    
        [System.Runtime.Serialization.EnumMember(Value = @"LA")]
        Laos = 127,
    
        [System.Runtime.Serialization.EnumMember(Value = @"LG")]
        Latvia = 128,
    
        [System.Runtime.Serialization.EnumMember(Value = @"LE")]
        Lebanon = 129,
    
        [System.Runtime.Serialization.EnumMember(Value = @"LT")]
        Lesotho = 130,
    
        [System.Runtime.Serialization.EnumMember(Value = @"LI")]
        Liberia = 131,
    
        [System.Runtime.Serialization.EnumMember(Value = @"LY")]
        Libya = 132,
    
        [System.Runtime.Serialization.EnumMember(Value = @"LS")]
        Liechtenstein = 133,
    
        [System.Runtime.Serialization.EnumMember(Value = @"LH")]
        Lithuania = 134,
    
        [System.Runtime.Serialization.EnumMember(Value = @"LU")]
        Luxembourg = 135,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MA")]
        Madagascar = 136,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MI")]
        Malawi = 137,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MY")]
        Malaysia = 138,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MV")]
        Maldives = 139,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ML")]
        Mali = 140,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MT")]
        Malta = 141,
    
        [System.Runtime.Serialization.EnumMember(Value = @"RM")]
        Marshall_Is_ = 142,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MB")]
        Martinique = 143,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MR")]
        Mauritania = 144,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MP")]
        Mauritius = 145,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MF")]
        Mayotte = 146,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MX")]
        Mexico = 147,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FM")]
        Micronesia = 148,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MQ")]
        Midway_Is_ = 149,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MD")]
        Moldova = 150,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MN")]
        Monaco = 151,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MG")]
        Mongolia = 152,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MH")]
        Montserrat = 153,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MO")]
        Morocco = 154,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MZ")]
        Mozambique = 155,
    
        [System.Runtime.Serialization.EnumMember(Value = @"WA")]
        Namibia = 156,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NR")]
        Nauru = 157,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NP")]
        Nepal = 158,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NL")]
        Netherlands = 159,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NT")]
        Netherlands_Antilles = 160,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NC")]
        New_Caledonia = 161,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NZ")]
        New_Zealand = 162,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NU")]
        Nicaragua = 163,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NG")]
        Niger = 164,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NI")]
        Nigeria = 165,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NE")]
        Niue = 166,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NF")]
        Norfolk_I_ = 167,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CQ")]
        Northern_Mariana_Is_ = 168,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NO")]
        Norway = 169,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MU")]
        Oman = 170,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PK")]
        Pakistan = 171,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PS")]
        Palau = 172,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PM")]
        Panama = 173,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PP")]
        Papua_New_Guinea = 174,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PA")]
        Paraguay = 175,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PE")]
        Peru = 176,
    
        [System.Runtime.Serialization.EnumMember(Value = @"RP")]
        Philippines = 177,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PC")]
        Pitcairn_Is_ = 178,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PL")]
        Poland = 179,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PO")]
        Portugal = 180,
    
        [System.Runtime.Serialization.EnumMember(Value = @"RQ")]
        Puerto_Rico = 181,
    
        [System.Runtime.Serialization.EnumMember(Value = @"QA")]
        Qatar = 182,
    
        [System.Runtime.Serialization.EnumMember(Value = @"KS")]
        South_Korea = 183,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MJ")]
        Montenegro = 184,
    
        [System.Runtime.Serialization.EnumMember(Value = @"RB")]
        Serbia = 185,
    
        [System.Runtime.Serialization.EnumMember(Value = @"RE")]
        Reunion = 186,
    
        [System.Runtime.Serialization.EnumMember(Value = @"RO")]
        Romania = 187,
    
        [System.Runtime.Serialization.EnumMember(Value = @"RS")]
        Russia = 188,
    
        [System.Runtime.Serialization.EnumMember(Value = @"RW")]
        Rwanda = 189,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SH")]
        St__Helena = 190,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SC")]
        St__Kitts___Nevis = 191,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ST")]
        St__Lucia = 192,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SB")]
        St__Pierre___Miquelon = 193,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VC")]
        St__Vincent___the_Grenadines = 194,
    
        [System.Runtime.Serialization.EnumMember(Value = @"WS")]
        Samoa = 195,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SM")]
        San_Marino = 196,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TP")]
        Sao_Tome___Principe = 197,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SA")]
        Saudi_Arabia = 198,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SG")]
        Senegal = 199,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SE")]
        Seychelles = 200,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SL")]
        Sierra_Leone = 201,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SN")]
        Singapore = 202,
    
        [System.Runtime.Serialization.EnumMember(Value = @"LO")]
        Slovakia = 203,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SI")]
        Slovenia = 204,
    
        [System.Runtime.Serialization.EnumMember(Value = @"BP")]
        Solomon_Is_ = 205,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SO")]
        Somalia = 206,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SF")]
        South_Africa = 207,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SX")]
        South_Georgia___the_South_Sandwich_Is_ = 208,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SP")]
        Spain = 209,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CE")]
        Sri_Lanka = 210,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SU")]
        Sudan = 211,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NS")]
        Suriname = 212,
    
        [System.Runtime.Serialization.EnumMember(Value = @"JN")]
        Jan_Mayen = 213,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SV")]
        Svalbard = 214,
    
        [System.Runtime.Serialization.EnumMember(Value = @"WZ")]
        Swaziland = 215,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SW")]
        Sweden = 216,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SZ")]
        Switzerland = 217,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SY")]
        Syria = 218,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TI")]
        Tajikistan = 219,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TH")]
        Thailand = 220,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MK")]
        Macedonia = 221,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TT")]
        Timor = 222,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TO")]
        Togo = 223,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TL")]
        Tokelau = 224,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TN")]
        Tonga = 225,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TD")]
        Trinidad___Tobago = 226,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TS")]
        Tunisia = 227,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TU")]
        Turkey = 228,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TX")]
        Turkmenistan = 229,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TK")]
        Turks___Caicos_Is = 230,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TV")]
        Tuvalu = 231,
    
        [System.Runtime.Serialization.EnumMember(Value = @"UG")]
        Uganda = 232,
    
        [System.Runtime.Serialization.EnumMember(Value = @"UP")]
        Ukraine = 233,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AE")]
        United_Arab_Emirates = 234,
    
        [System.Runtime.Serialization.EnumMember(Value = @"UK")]
        United_Kingdom = 235,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TZ")]
        Tanzania = 236,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VQ")]
        Virgin_Is_ = 237,
    
        [System.Runtime.Serialization.EnumMember(Value = @"UY")]
        Uruguay = 238,
    
        [System.Runtime.Serialization.EnumMember(Value = @"UZ")]
        Uzbekistan = 239,
    
        [System.Runtime.Serialization.EnumMember(Value = @"NH")]
        Vanuatu = 240,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VE")]
        Venezuela = 241,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VM")]
        Vietnam = 242,
    
        [System.Runtime.Serialization.EnumMember(Value = @"WQ")]
        Wake_I_ = 243,
    
        [System.Runtime.Serialization.EnumMember(Value = @"WF")]
        Wallis___Futuna = 244,
    
        [System.Runtime.Serialization.EnumMember(Value = @"WE")]
        West_Bank = 245,
    
        [System.Runtime.Serialization.EnumMember(Value = @"WI")]
        Western_Sahara = 246,
    
        [System.Runtime.Serialization.EnumMember(Value = @"YM")]
        Yemen = 247,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ZA")]
        Zambia = 248,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ZI")]
        Zimbabwe = 249,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SS")]
        South_Sudan = 250,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Year
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1920")]
        _1920 = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1921")]
        _1921 = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1922")]
        _1922 = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1923")]
        _1923 = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1924")]
        _1924 = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1925")]
        _1925 = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1926")]
        _1926 = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1927")]
        _1927 = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1928")]
        _1928 = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1929")]
        _1929 = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1930")]
        _1930 = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1931")]
        _1931 = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1932")]
        _1932 = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1933")]
        _1933 = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1934")]
        _1934 = 15,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1935")]
        _1935 = 16,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1936")]
        _1936 = 17,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1937")]
        _1937 = 18,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1938")]
        _1938 = 19,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1939")]
        _1939 = 20,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1940")]
        _1940 = 21,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1941")]
        _1941 = 22,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1942")]
        _1942 = 23,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1943")]
        _1943 = 24,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1944")]
        _1944 = 25,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1945")]
        _1945 = 26,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1946")]
        _1946 = 27,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1947")]
        _1947 = 28,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1948")]
        _1948 = 29,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1949")]
        _1949 = 30,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1950")]
        _1950 = 31,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1951")]
        _1951 = 32,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1952")]
        _1952 = 33,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1953")]
        _1953 = 34,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1954")]
        _1954 = 35,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1955")]
        _1955 = 36,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1956")]
        _1956 = 37,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1957")]
        _1957 = 38,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1958")]
        _1958 = 39,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1959")]
        _1959 = 40,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1960")]
        _1960 = 41,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1961")]
        _1961 = 42,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1962")]
        _1962 = 43,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1963")]
        _1963 = 44,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1964")]
        _1964 = 45,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1965")]
        _1965 = 46,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1966")]
        _1966 = 47,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1967")]
        _1967 = 48,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1968")]
        _1968 = 49,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1969")]
        _1969 = 50,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1970")]
        _1970 = 51,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1971")]
        _1971 = 52,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1972")]
        _1972 = 53,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1973")]
        _1973 = 54,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1974")]
        _1974 = 55,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1975")]
        _1975 = 56,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1976")]
        _1976 = 57,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1977")]
        _1977 = 58,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1978")]
        _1978 = 59,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1979")]
        _1979 = 60,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1980")]
        _1980 = 61,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1981")]
        _1981 = 62,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1982")]
        _1982 = 63,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1983")]
        _1983 = 64,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1984")]
        _1984 = 65,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1985")]
        _1985 = 66,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1986")]
        _1986 = 67,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1987")]
        _1987 = 68,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1988")]
        _1988 = 69,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1989")]
        _1989 = 70,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1990")]
        _1990 = 71,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1991")]
        _1991 = 72,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1992")]
        _1992 = 73,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1993")]
        _1993 = 74,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1994")]
        _1994 = 75,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1995")]
        _1995 = 76,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1996")]
        _1996 = 77,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1997")]
        _1997 = 78,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1998")]
        _1998 = 79,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1999")]
        _1999 = 80,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2000")]
        _2000 = 81,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2001")]
        _2001 = 82,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2002")]
        _2002 = 83,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2003")]
        _2003 = 84,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2004")]
        _2004 = 85,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2005")]
        _2005 = 86,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2006")]
        _2006 = 87,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2007")]
        _2007 = 88,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2008")]
        _2008 = 89,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2009")]
        _2009 = 90,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2010")]
        _2010 = 91,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2011")]
        _2011 = 92,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2012")]
        _2012 = 93,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2013")]
        _2013 = 94,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2014")]
        _2014 = 95,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2015")]
        _2015 = 96,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2016")]
        _2016 = 97,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2017")]
        _2017 = 98,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2018")]
        _2018 = 99,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2019")]
        _2019 = 100,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2020")]
        _2020 = 101,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2021")]
        _2021 = 102,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2022")]
        _2022 = 103,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2023")]
        _2023 = 104,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2024")]
        _2024 = 105,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2025")]
        _2025 = 106,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Month
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        _1 = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        _2 = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        _3 = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        _4 = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"5")]
        _5 = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"6")]
        _6 = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"7")]
        _7 = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"8")]
        _8 = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"9")]
        _9 = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"10")]
        _10 = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"11")]
        _11 = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"12")]
        _12 = 12,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Day
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        _1 = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        _2 = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        _3 = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        _4 = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"5")]
        _5 = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"6")]
        _6 = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"7")]
        _7 = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"8")]
        _8 = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"9")]
        _9 = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"10")]
        _10 = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"11")]
        _11 = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"12")]
        _12 = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"13")]
        _13 = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"14")]
        _14 = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"15")]
        _15 = 15,
    
        [System.Runtime.Serialization.EnumMember(Value = @"16")]
        _16 = 16,
    
        [System.Runtime.Serialization.EnumMember(Value = @"17")]
        _17 = 17,
    
        [System.Runtime.Serialization.EnumMember(Value = @"18")]
        _18 = 18,
    
        [System.Runtime.Serialization.EnumMember(Value = @"19")]
        _19 = 19,
    
        [System.Runtime.Serialization.EnumMember(Value = @"20")]
        _20 = 20,
    
        [System.Runtime.Serialization.EnumMember(Value = @"21")]
        _21 = 21,
    
        [System.Runtime.Serialization.EnumMember(Value = @"22")]
        _22 = 22,
    
        [System.Runtime.Serialization.EnumMember(Value = @"23")]
        _23 = 23,
    
        [System.Runtime.Serialization.EnumMember(Value = @"24")]
        _24 = 24,
    
        [System.Runtime.Serialization.EnumMember(Value = @"25")]
        _25 = 25,
    
        [System.Runtime.Serialization.EnumMember(Value = @"26")]
        _26 = 26,
    
        [System.Runtime.Serialization.EnumMember(Value = @"27")]
        _27 = 27,
    
        [System.Runtime.Serialization.EnumMember(Value = @"28")]
        _28 = 28,
    
        [System.Runtime.Serialization.EnumMember(Value = @"29")]
        _29 = 29,
    
        [System.Runtime.Serialization.EnumMember(Value = @"30")]
        _30 = 30,
    
        [System.Runtime.Serialization.EnumMember(Value = @"31")]
        _31 = 31,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Yes_no
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        Yes = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        No = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"8888")]
        Not_specified = 3,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Ethnicity
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        No__Not_Spanish_Hispanic_Latino = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        Yes__Mexican__Mexican_American__Chicano = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        Yes__Puerto_Rican = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        Yes__Cuban = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        Yes__Other_Spanish_Hispanic_Latino = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"5")]
        Yes__Origin_Unknown = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"8888")]
        Not_Specified = 7,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Case_progress
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        Not_Started = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        In_Progress = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        Completed = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        Not_Available = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        Not_Applicable = 5,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Race
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        White = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        Black = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        American_Indian_Alaska_Native = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        Native_Hawaiian = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        Guamanian_or_Chamorro = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"5")]
        Samoan = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"6")]
        Other_Pacific_Islander = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"7")]
        Asian_Indian = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"8")]
        Chinese = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"9")]
        Filipino = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"10")]
        Japanese = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"11")]
        Korean = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"12")]
        Vietnamese = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"13")]
        Other_Asian = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"14")]
        Other_Race = 15,
    
        [System.Runtime.Serialization.EnumMember(Value = @"8888")]
        Race_Not_Specified = 16,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Omb_race_recode
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        White = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        Black = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        American_Indian_Alaska_Native = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        Pacific_Islander = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        Asian = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"5")]
        BiRacial = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"6")]
        MultiRacial = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"8888")]
        Race_Not_Specified = 8,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Home_record 
    {
        [Newtonsoft.Json.JsonProperty("first_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string First_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("middle_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Middle_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("last_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Last_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_death Date_of_death { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state_of_death_record", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State_of_death_record { get; set; }
    
        [Newtonsoft.Json.JsonProperty("record_id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Record_id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("agency_case_id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Agency_case_id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("how_was_this_death_identified", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double How_was_this_death_identified { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_other_multiple_sources", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_other_multiple_sources { get; set; }
    
        [Newtonsoft.Json.JsonProperty("primary_abstractor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Primary_abstractor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_progress_report", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Case_progress_report Case_progress_report { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Home_record FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Home_record>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Death_certificate 
    {
        [Newtonsoft.Json.JsonProperty("certificate_identification", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Certificate_identification Certificate_identification { get; set; }
    
        [Newtonsoft.Json.JsonProperty("place_of_last_residence", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Place_of_last_residence Place_of_last_residence { get; set; }
    
        [Newtonsoft.Json.JsonProperty("demographics", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Demographics Demographics { get; set; }
    
        [Newtonsoft.Json.JsonProperty("citizen_of_what_country", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Citizen_of_what_country { get; set; }
    
        [Newtonsoft.Json.JsonProperty("race", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Race2 Race { get; set; }
    
        [Newtonsoft.Json.JsonProperty("injury_associated_information", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Injury_associated_information Injury_associated_information { get; set; }
    
        [Newtonsoft.Json.JsonProperty("address_of_injury", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address_of_injury Address_of_injury { get; set; }
    
        [Newtonsoft.Json.JsonProperty("death_information", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Death_information Death_information { get; set; }
    
        [Newtonsoft.Json.JsonProperty("address_of_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address_of_death Address_of_death { get; set; }
    
        [Newtonsoft.Json.JsonProperty("causes_of_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Causes_of_death> Causes_of_death { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Death_certificate FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Death_certificate>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Causes_of_death 
    {
        [Newtonsoft.Json.JsonProperty("cause_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Cause_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("cause_descriptive", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Cause_descriptive { get; set; }
    
        [Newtonsoft.Json.JsonProperty("icd_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Icd_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("interval", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Interval { get; set; }
    
        [Newtonsoft.Json.JsonProperty("interval_unit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Interval_unit { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Causes_of_death FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Causes_of_death>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Birth_fetal_death_certificate_parent 
    {
        [Newtonsoft.Json.JsonProperty("facility_of_delivery_demographics", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Facility_of_delivery_demographics Facility_of_delivery_demographics { get; set; }
    
        [Newtonsoft.Json.JsonProperty("facility_of_delivery_location", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Facility_of_delivery_location Facility_of_delivery_location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("demographic_of_father", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Demographic_of_father Demographic_of_father { get; set; }
    
        [Newtonsoft.Json.JsonProperty("record_identification", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Record_identification Record_identification { get; set; }
    
        [Newtonsoft.Json.JsonProperty("demographic_of_mother", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Demographic_of_mother Demographic_of_mother { get; set; }
    
        [Newtonsoft.Json.JsonProperty("location_of_residence", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Location_of_residence Location_of_residence { get; set; }
    
        [Newtonsoft.Json.JsonProperty("race", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Race3 Race { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pregnancy_history", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Pregnancy_history Pregnancy_history { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maternal_biometrics", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Maternal_biometrics Maternal_biometrics { get; set; }
    
        [Newtonsoft.Json.JsonProperty("prenatal_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Prenatal_care Prenatal_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("cigarette_smoking", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Cigarette_smoking Cigarette_smoking { get; set; }
    
        [Newtonsoft.Json.JsonProperty("risk_factors", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Risk_factors Risk_factors { get; set; }
    
        [Newtonsoft.Json.JsonProperty("infections_present_or_treated_during_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<double> Infections_present_or_treated_during_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("onset_of_labor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<double> Onset_of_labor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("obstetric_procedures", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<double> Obstetric_procedures { get; set; }
    
        [Newtonsoft.Json.JsonProperty("characteristics_of_labor_and_delivery", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<double> Characteristics_of_labor_and_delivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maternal_morbidity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<double> Maternal_morbidity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("length_between_child_birth_and_death_of_mother", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Length_between_child_birth_and_death_of_mother { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Birth_fetal_death_certificate_parent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Birth_fetal_death_certificate_parent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Birth_certificate_infant_fetal_section 
    {
        [Newtonsoft.Json.JsonProperty("record_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Record_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("is_multiple_gestation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Is_multiple_gestation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("birth_order", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Birth_order { get; set; }
    
        [Newtonsoft.Json.JsonProperty("record_identification", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Record_identification2 Record_identification { get; set; }
    
        [Newtonsoft.Json.JsonProperty("biometrics_and_demographics", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Biometrics_and_demographics Biometrics_and_demographics { get; set; }
    
        [Newtonsoft.Json.JsonProperty("method_of_delivery", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Method_of_delivery Method_of_delivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("abnormal_conditions_of_newborn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<double> Abnormal_conditions_of_newborn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("congenital_anomalies", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<double> Congenital_anomalies { get; set; }
    
        [Newtonsoft.Json.JsonProperty("icd_version", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Icd_version { get; set; }
    
        [Newtonsoft.Json.JsonProperty("causes_of_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Causes_of_death1> Causes_of_death { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Birth_certificate_infant_fetal_section FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Birth_certificate_infant_fetal_section>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Causes_of_death1 
    {
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("class", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Class { get; set; }
    
        [Newtonsoft.Json.JsonProperty("complication_subclass", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Complication_subclass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_specify", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_specify { get; set; }
    
        [Newtonsoft.Json.JsonProperty("icd_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Icd_code { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Causes_of_death1 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Causes_of_death1>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Autopsy_report 
    {
        [Newtonsoft.Json.JsonProperty("was_autopsy_performed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_autopsy_performed { get; set; }
    
        [Newtonsoft.Json.JsonProperty("completeness_of_autopsy_information", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Completeness_of_autopsy_information { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reporter_characteristics", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Reporter_characteristics Reporter_characteristics { get; set; }
    
        [Newtonsoft.Json.JsonProperty("biometrics", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Biometrics Biometrics { get; set; }
    
        [Newtonsoft.Json.JsonProperty("relevant_maternal_death_findings", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Relevant_maternal_death_findings Relevant_maternal_death_findings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_drug_toxicology_positive", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_drug_toxicology_positive { get; set; }
    
        [Newtonsoft.Json.JsonProperty("toxicology", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Toxicology> Toxicology { get; set; }
    
        [Newtonsoft.Json.JsonProperty("icd_code_version", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Icd_code_version { get; set; }
    
        [Newtonsoft.Json.JsonProperty("causes_of_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Causes_of_death2> Causes_of_death { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Autopsy_report FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Autopsy_report>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Toxicology 
    {
        [Newtonsoft.Json.JsonProperty("substance", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Substance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("concentration", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Concentration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("unit_of_measure", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Unit_of_measure { get; set; }
    
        [Newtonsoft.Json.JsonProperty("level", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Level { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comment { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Toxicology FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Toxicology>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Causes_of_death2 
    {
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("cause", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Cause { get; set; }
    
        [Newtonsoft.Json.JsonProperty("icd_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Icd_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comment { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Causes_of_death2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Causes_of_death2>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Prenatal 
    {
        [Newtonsoft.Json.JsonProperty("prenatal_care_record_no", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Prenatal_care_record_no { get; set; }
    
        [Newtonsoft.Json.JsonProperty("number_of_pnc_sources", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Number_of_pnc_sources { get; set; }
    
        [Newtonsoft.Json.JsonProperty("primary_prenatal_care_facility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Primary_prenatal_care_facility Primary_prenatal_care_facility { get; set; }
    
        [Newtonsoft.Json.JsonProperty("location_of_primary_prenatal_care_facility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Location_of_primary_prenatal_care_facility Location_of_primary_prenatal_care_facility { get; set; }
    
        [Newtonsoft.Json.JsonProperty("prior_surgical_procedures_before_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Prior_surgical_procedures_before_pregnancy> Prior_surgical_procedures_before_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("had_pre_existing_conditions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Had_pre_existing_conditions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pre_existing_conditons_grid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Pre_existing_conditons_grid> Pre_existing_conditons_grid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("were_there_documented_mental_health_conditions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Were_there_documented_mental_health_conditions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("family_medical_history", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Family_medical_history> Family_medical_history { get; set; }
    
        [Newtonsoft.Json.JsonProperty("evidence_of_substance_use", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Evidence_of_substance_use { get; set; }
    
        [Newtonsoft.Json.JsonProperty("substance_use_grid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Substance_use_grid> Substance_use_grid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pregnancy_history", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Pregnancy_history2 Pregnancy_history { get; set; }
    
        [Newtonsoft.Json.JsonProperty("intendedenes", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Intendedenes Intendedenes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("infertility_treatment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Infertility_treatment Infertility_treatment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("current_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Current_pregnancy Current_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("routine_monitoring", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Routine_monitoring> Routine_monitoring { get; set; }
    
        [Newtonsoft.Json.JsonProperty("highest_blood_pressure", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Highest_blood_pressure Highest_blood_pressure { get; set; }
    
        [Newtonsoft.Json.JsonProperty("lowest_hematocrit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Lowest_hematocrit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_lab_tests", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Other_lab_tests> Other_lab_tests { get; set; }
    
        [Newtonsoft.Json.JsonProperty("diagnostic_procedures", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Diagnostic_procedures> Diagnostic_procedures { get; set; }
    
        [Newtonsoft.Json.JsonProperty("were_there_problems_identified", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Were_there_problems_identified { get; set; }
    
        [Newtonsoft.Json.JsonProperty("problems_identified_grid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Problems_identified_grid> Problems_identified_grid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("were_there_adverse_reactions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Were_there_adverse_reactions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medications_and_drugs_during_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Medications_and_drugs_during_pregnancy> Medications_and_drugs_during_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("were_there_pre_delivery_hospitalizations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Were_there_pre_delivery_hospitalizations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pre_delivery_hospitalizations_details", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Pre_delivery_hospitalizations_details> Pre_delivery_hospitalizations_details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("were_medical_referrals_to_others", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Were_medical_referrals_to_others { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medical_referrals", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Medical_referrals> Medical_referrals { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_sources_of_prenatal_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Other_sources_of_prenatal_care> Other_sources_of_prenatal_care { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Prenatal FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Prenatal>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Prior_surgical_procedures_before_pregnancy 
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("procedure", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Procedure { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comments { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Prior_surgical_procedures_before_pregnancy FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Prior_surgical_procedures_before_pregnancy>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Pre_existing_conditons_grid 
    {
        [Newtonsoft.Json.JsonProperty("condition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Condition { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other { get; set; }
    
        [Newtonsoft.Json.JsonProperty("duration", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Duration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comments { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Pre_existing_conditons_grid FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Pre_existing_conditons_grid>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Family_medical_history 
    {
        [Newtonsoft.Json.JsonProperty("relation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Relation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("condition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Condition { get; set; }
    
        [Newtonsoft.Json.JsonProperty("is_living", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Is_living { get; set; }
    
        [Newtonsoft.Json.JsonProperty("age_at_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Age_at_death { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comments { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Family_medical_history FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Family_medical_history>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Substance_use_grid 
    {
        [Newtonsoft.Json.JsonProperty("substance", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Substance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("screening", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Screening { get; set; }
    
        [Newtonsoft.Json.JsonProperty("couseling_education", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Couseling_education { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comments { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Substance_use_grid FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Substance_use_grid>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Routine_monitoring 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("systolic_bp", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Systolic_bp { get; set; }
    
        [Newtonsoft.Json.JsonProperty("diastolic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Diastolic { get; set; }
    
        [Newtonsoft.Json.JsonProperty("urine_protein", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Urine_protein { get; set; }
    
        [Newtonsoft.Json.JsonProperty("urine_ketones", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Urine_ketones { get; set; }
    
        [Newtonsoft.Json.JsonProperty("urine_glucose", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Urine_glucose { get; set; }
    
        [Newtonsoft.Json.JsonProperty("blood_hematocrit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Blood_hematocrit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Weight { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Routine_monitoring FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Routine_monitoring>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Other_lab_tests 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("test_or_procedure", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Test_or_procedure { get; set; }
    
        [Newtonsoft.Json.JsonProperty("results", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Results { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comments { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Other_lab_tests FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Other_lab_tests>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Diagnostic_procedures 
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("procedure", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Procedure { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comments { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Diagnostic_procedures FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Diagnostic_procedures>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Problems_identified_grid 
    {
        [Newtonsoft.Json.JsonProperty("date_1st_noted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date_1st_noted { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("problem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Problem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comments { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Problems_identified_grid FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Problems_identified_grid>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Medications_and_drugs_during_pregnancy 
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medication", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Medication { get; set; }
    
        [Newtonsoft.Json.JsonProperty("dose_frequency_duration", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Dose_frequency_duration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("is_adverse_reaction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Is_adverse_reaction { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Medications_and_drugs_during_pregnancy FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Medications_and_drugs_during_pregnancy>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Pre_delivery_hospitalizations_details 
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("facility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Facility { get; set; }
    
        [Newtonsoft.Json.JsonProperty("duration", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Duration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comments { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Pre_delivery_hospitalizations_details FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Pre_delivery_hospitalizations_details>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Medical_referrals 
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("type_of_specialist", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Type_of_specialist { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_appointment_kept", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_appointment_kept { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Medical_referrals FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Medical_referrals>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Other_sources_of_prenatal_care 
    {
        [Newtonsoft.Json.JsonProperty("place", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Place { get; set; }
    
        [Newtonsoft.Json.JsonProperty("provider_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Provider_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("begin_date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Begin_date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("end_date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset End_date { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Other_sources_of_prenatal_care FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Other_sources_of_prenatal_care>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Er_visit_and_hospital_medical_records 
    {
        [Newtonsoft.Json.JsonProperty("maternal_record_identification", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Maternal_record_identification Maternal_record_identification { get; set; }
    
        [Newtonsoft.Json.JsonProperty("basic_admission_and_discharge_information", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Basic_admission_and_discharge_information Basic_admission_and_discharge_information { get; set; }
    
        [Newtonsoft.Json.JsonProperty("name_and_location_facility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Name_and_location_facility Name_and_location_facility { get; set; }
    
        [Newtonsoft.Json.JsonProperty("internal_transfers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Internal_transfers> Internal_transfers { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maternal_biometrics", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Maternal_biometrics2 Maternal_biometrics { get; set; }
    
        [Newtonsoft.Json.JsonProperty("physical_exam_and_evaluations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Physical_exam_and_evaluations> Physical_exam_and_evaluations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("psychological_exam_and_assesments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Psychological_exam_and_assesments> Psychological_exam_and_assesments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("labratory_tests", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Labratory_tests> Labratory_tests { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pathology", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Pathology> Pathology { get; set; }
    
        [Newtonsoft.Json.JsonProperty("onset_of_labor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Onset_of_labor Onset_of_labor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("vital_signs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Vital_signs> Vital_signs { get; set; }
    
        [Newtonsoft.Json.JsonProperty("highest_bp", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Highest_bp Highest_bp { get; set; }
    
        [Newtonsoft.Json.JsonProperty("birth_attendant", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Birth_attendant> Birth_attendant { get; set; }
    
        [Newtonsoft.Json.JsonProperty("were_there_complications_of_anesthesia", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Were_there_complications_of_anesthesia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("anesthesia", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Anesthesia> Anesthesia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("any_adverse_reactions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Any_adverse_reactions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("list_of_medications", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<List_of_medications> List_of_medications { get; set; }
    
        [Newtonsoft.Json.JsonProperty("any_surgical_procedures", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Any_surgical_procedures { get; set; }
    
        [Newtonsoft.Json.JsonProperty("surgical_procedures", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Surgical_procedures> Surgical_procedures { get; set; }
    
        [Newtonsoft.Json.JsonProperty("any_blood_transfusions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Any_blood_transfusions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("patient_blood_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Patient_blood_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("blood_product_grid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Blood_product_grid> Blood_product_grid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("diagnostic_imaging_grid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Diagnostic_imaging_grid> Diagnostic_imaging_grid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("referrals_and_consultations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Referrals_and_consultations> Referrals_and_consultations { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Er_visit_and_hospital_medical_records FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Er_visit_and_hospital_medical_records>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Internal_transfers 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("from_unit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string From_unit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("to_unit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string To_unit { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Internal_transfers FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Internal_transfers>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Physical_exam_and_evaluations 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("exam_evaluation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Exam_evaluation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("findings", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Findings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("performed_by", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Performed_by { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Physical_exam_and_evaluations FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Physical_exam_and_evaluations>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Psychological_exam_and_assesments 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("exam_assessments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Exam_assessments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("findings", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Findings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("performed_by", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Performed_by { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Psychological_exam_and_assesments FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Psychological_exam_and_assesments>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Labratory_tests 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specimen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specimen { get; set; }
    
        [Newtonsoft.Json.JsonProperty("test_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Test_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Result { get; set; }
    
        [Newtonsoft.Json.JsonProperty("diagnostic_level", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Diagnostic_level { get; set; }
    
        [Newtonsoft.Json.JsonProperty("flag", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Flag { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Labratory_tests FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Labratory_tests>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Pathology 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specimen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specimen { get; set; }
    
        [Newtonsoft.Json.JsonProperty("exam_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Exam_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("findings", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Findings { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Pathology FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Pathology>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Vital_signs 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("temperature", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Temperature { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pulse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pulse { get; set; }
    
        [Newtonsoft.Json.JsonProperty("respiration", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Respiration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("bp_systolic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Bp_systolic { get; set; }
    
        [Newtonsoft.Json.JsonProperty("bp_diastolic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Bp_diastolic { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Vital_signs FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Vital_signs>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Birth_attendant 
    {
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Title { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_other", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_other { get; set; }
    
        [Newtonsoft.Json.JsonProperty("npi", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Npi { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Birth_attendant FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Birth_attendant>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Anesthesia 
    {
        [Newtonsoft.Json.JsonProperty("date_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("method", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Method { get; set; }
    
        [Newtonsoft.Json.JsonProperty("complications", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Complications { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Anesthesia FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Anesthesia>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class List_of_medications 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medication", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Medication { get; set; }
    
        [Newtonsoft.Json.JsonProperty("dose_frequency_duration", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Dose_frequency_duration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("adverse_reaction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Adverse_reaction { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static List_of_medications FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<List_of_medications>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Surgical_procedures 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("hospital_unit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Hospital_unit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("procedure", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Procedure { get; set; }
    
        [Newtonsoft.Json.JsonProperty("performed_by", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Performed_by { get; set; }
    
        [Newtonsoft.Json.JsonProperty("outcome", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Outcome { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Surgical_procedures FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Surgical_procedures>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Blood_product_grid 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("product", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Product { get; set; }
    
        [Newtonsoft.Json.JsonProperty("number_of_units", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Number_of_units { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reaction_complications", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reaction_complications { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Blood_product_grid FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Blood_product_grid>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Diagnostic_imaging_grid 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("procedure", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Procedure { get; set; }
    
        [Newtonsoft.Json.JsonProperty("target", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Target { get; set; }
    
        [Newtonsoft.Json.JsonProperty("finding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Finding { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Diagnostic_imaging_grid FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Diagnostic_imaging_grid>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Referrals_and_consultations 
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specialist_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specialist_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("recommendations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Recommendations { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Referrals_and_consultations FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Referrals_and_consultations>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Other_medical_office_visits 
    {
        [Newtonsoft.Json.JsonProperty("visit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Visit Visit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medical_care_facility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Medical_care_facility Medical_care_facility { get; set; }
    
        [Newtonsoft.Json.JsonProperty("location_of_medical_care_facility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Location_of_medical_care_facility Location_of_medical_care_facility { get; set; }
    
        [Newtonsoft.Json.JsonProperty("relevant_medical_history", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Relevant_medical_history> Relevant_medical_history { get; set; }
    
        [Newtonsoft.Json.JsonProperty("relevant_family_history", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Relevant_family_history> Relevant_family_history { get; set; }
    
        [Newtonsoft.Json.JsonProperty("relevant_social_history", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Relevant_social_history> Relevant_social_history { get; set; }
    
        [Newtonsoft.Json.JsonProperty("vital_signs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Vital_signs1> Vital_signs { get; set; }
    
        [Newtonsoft.Json.JsonProperty("laboratory_tests", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Laboratory_tests> Laboratory_tests { get; set; }
    
        [Newtonsoft.Json.JsonProperty("diagnostic_imaging_and_other_technology", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Diagnostic_imaging_and_other_technology> Diagnostic_imaging_and_other_technology { get; set; }
    
        [Newtonsoft.Json.JsonProperty("physical_exam", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Physical_exam> Physical_exam { get; set; }
    
        [Newtonsoft.Json.JsonProperty("referrals_and_consultations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Referrals_and_consultations1> Referrals_and_consultations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medications", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Medications> Medications { get; set; }
    
        [Newtonsoft.Json.JsonProperty("new_grid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<New_grid> New_grid { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Other_medical_office_visits FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Other_medical_office_visits>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Relevant_medical_history 
    {
        [Newtonsoft.Json.JsonProperty("finding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Finding { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Relevant_medical_history FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Relevant_medical_history>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Relevant_family_history 
    {
        [Newtonsoft.Json.JsonProperty("finding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Finding { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Relevant_family_history FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Relevant_family_history>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Relevant_social_history 
    {
        [Newtonsoft.Json.JsonProperty("finding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Finding { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Relevant_social_history FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Relevant_social_history>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Vital_signs1 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("temperature", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Temperature { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pulse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pulse { get; set; }
    
        [Newtonsoft.Json.JsonProperty("respiration", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Respiration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("bp_systolic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Bp_systolic { get; set; }
    
        [Newtonsoft.Json.JsonProperty("bp_diastolic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Bp_diastolic { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Vital_signs1 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Vital_signs1>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Laboratory_tests 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specimen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specimen { get; set; }
    
        [Newtonsoft.Json.JsonProperty("test_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Test_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Result { get; set; }
    
        [Newtonsoft.Json.JsonProperty("diagnostic_level", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Diagnostic_level { get; set; }
    
        [Newtonsoft.Json.JsonProperty("flag", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Flag { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Laboratory_tests FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Laboratory_tests>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Diagnostic_imaging_and_other_technology 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("technology_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Technology_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("target_procedure", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Target_procedure { get; set; }
    
        [Newtonsoft.Json.JsonProperty("finding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Finding { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Diagnostic_imaging_and_other_technology FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Diagnostic_imaging_and_other_technology>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Physical_exam 
    {
        [Newtonsoft.Json.JsonProperty("body_system", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Body_system { get; set; }
    
        [Newtonsoft.Json.JsonProperty("finding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Finding { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Physical_exam FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Physical_exam>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Referrals_and_consultations1 
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("speciality", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Speciality { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("recommendations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Recommendations { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Referrals_and_consultations1 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Referrals_and_consultations1>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Medications 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medication_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Medication_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("dose_frequeny_duration", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Dose_frequeny_duration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("adverse_reaction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Adverse_reaction { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Medications FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Medications>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class New_grid 
    {
        [Newtonsoft.Json.JsonProperty("abnormal_findings", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Abnormal_findings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("recommendations_and_action_plans", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Recommendations_and_action_plans { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static New_grid FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<New_grid>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Medical_transport 
    {
        [Newtonsoft.Json.JsonProperty("date_of_transport", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_transport Date_of_transport { get; set; }
    
        [Newtonsoft.Json.JsonProperty("who_managed_the_transport", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Who_managed_the_transport { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_transport_manager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_transport_manager { get; set; }
    
        [Newtonsoft.Json.JsonProperty("transport_vehicle", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Transport_vehicle { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_transport_vehicle", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_transport_vehicle { get; set; }
    
        [Newtonsoft.Json.JsonProperty("timing_of_transport", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Timing_of_transport Timing_of_transport { get; set; }
    
        [Newtonsoft.Json.JsonProperty("origin_information", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Origin_information Origin_information { get; set; }
    
        [Newtonsoft.Json.JsonProperty("transport_vital_signs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Transport_vital_signs> Transport_vital_signs { get; set; }
    
        [Newtonsoft.Json.JsonProperty("destination_information", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Destination_information Destination_information { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Medical_transport FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Medical_transport>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Transport_vital_signs 
    {
        [Newtonsoft.Json.JsonProperty("date_and_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Date_and_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("systolic_bp", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Systolic_bp { get; set; }
    
        [Newtonsoft.Json.JsonProperty("diastolic_bp", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Diastolic_bp { get; set; }
    
        [Newtonsoft.Json.JsonProperty("oxygen_saturation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Oxygen_saturation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("blood_sugar", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Blood_sugar { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Transport_vital_signs FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Transport_vital_signs>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Social_and_environmental_profile 
    {
        [Newtonsoft.Json.JsonProperty("socio_economic_characteristics", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Socio_economic_characteristics Socio_economic_characteristics { get; set; }
    
        [Newtonsoft.Json.JsonProperty("members_of_household", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Members_of_household> Members_of_household { get; set; }
    
        [Newtonsoft.Json.JsonProperty("previous_or_current_incarcerations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Previous_or_current_incarcerations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("details_of_incarcerations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Details_of_incarcerations> Details_of_incarcerations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("health_care_access", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Health_care_access Health_care_access { get; set; }
    
        [Newtonsoft.Json.JsonProperty("communications", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Communications Communications { get; set; }
    
        [Newtonsoft.Json.JsonProperty("social_or_emotional_stress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Social_or_emotional_stress Social_or_emotional_stress { get; set; }
    
        [Newtonsoft.Json.JsonProperty("health_care_system", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Health_care_system Health_care_system { get; set; }
    
        [Newtonsoft.Json.JsonProperty("had_military_service", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Had_military_service { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_there_bereavement_support", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_there_bereavement_support { get; set; }
    
        [Newtonsoft.Json.JsonProperty("social_and_medical_referrals", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Social_and_medical_referrals> Social_and_medical_referrals { get; set; }
    
        [Newtonsoft.Json.JsonProperty("sources_of_social_services_information_for_this_record", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Sources_of_social_services_information_for_this_record> Sources_of_social_services_information_for_this_record { get; set; }
    
        [Newtonsoft.Json.JsonProperty("documented_substance_use", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Documented_substance_use { get; set; }
    
        [Newtonsoft.Json.JsonProperty("if_yes_specify_substances", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<If_yes_specify_substances> If_yes_specify_substances { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Social_and_environmental_profile FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Social_and_environmental_profile>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Members_of_household 
    {
        [Newtonsoft.Json.JsonProperty("relationship", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Relationship { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gender", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gender { get; set; }
    
        [Newtonsoft.Json.JsonProperty("age", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Age { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Members_of_household FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Members_of_household>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Details_of_incarcerations 
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("duration", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Duration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comments { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Details_of_incarcerations FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Details_of_incarcerations>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Social_and_medical_referrals 
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("referred_to", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Referred_to { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specialty", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specialty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("compiled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Compiled { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reason_for_non_compliance", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reason_for_non_compliance { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Social_and_medical_referrals FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Social_and_medical_referrals>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Sources_of_social_services_information_for_this_record 
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("element", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Element { get; set; }
    
        [Newtonsoft.Json.JsonProperty("source_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Source_name { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Sources_of_social_services_information_for_this_record FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Sources_of_social_services_information_for_this_record>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class If_yes_specify_substances 
    {
        [Newtonsoft.Json.JsonProperty("substance", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Substance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("timing_of_substance_use", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Timing_of_substance_use { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static If_yes_specify_substances FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<If_yes_specify_substances>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Mental_health_profile 
    {
        [Newtonsoft.Json.JsonProperty("were_there_documented_preexisting_mental_health_conditions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Were_there_documented_preexisting_mental_health_conditions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("documented_preexisting_mental_health_conditions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Documented_preexisting_mental_health_conditions> Documented_preexisting_mental_health_conditions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("were_there_documented_mental_health_conditions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Were_there_documented_mental_health_conditions> Were_there_documented_mental_health_conditions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("mental_health_conditions_prior_to_the_most_recent_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<double> Mental_health_conditions_prior_to_the_most_recent_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_prior_to_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_prior_to_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("mental_health_conditions_during_the_most_recent_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<double> Mental_health_conditions_during_the_most_recent_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_during_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_during_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("mental_health_conditions_after_the_most_recent_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<double> Mental_health_conditions_after_the_most_recent_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_after_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_after_pregnancy { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Mental_health_profile FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Mental_health_profile>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Documented_preexisting_mental_health_conditions 
    {
        [Newtonsoft.Json.JsonProperty("condition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Condition { get; set; }
    
        [Newtonsoft.Json.JsonProperty("duration_of_condition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Duration_of_condition { get; set; }
    
        [Newtonsoft.Json.JsonProperty("treatments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Treatments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("duration_of_tx", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Duration_of_tx { get; set; }
    
        [Newtonsoft.Json.JsonProperty("treatment_changed_during_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Treatment_changed_during_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("dosage_changed_during_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Dosage_changed_during_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("if_yes_mental_health_provider_consultation_during_this_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double If_yes_mental_health_provider_consultation_during_this_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("did_patient_adhere_to_treatment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Did_patient_adhere_to_treatment { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Documented_preexisting_mental_health_conditions FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Documented_preexisting_mental_health_conditions>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Were_there_documented_mental_health_conditions 
    {
        [Newtonsoft.Json.JsonProperty("date_of_screening", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date_of_screening { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("days_postpartum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Days_postpartum { get; set; }
    
        [Newtonsoft.Json.JsonProperty("screening_tool", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Screening_tool { get; set; }
    
        [Newtonsoft.Json.JsonProperty("referral_for_treatment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Referral_for_treatment { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Were_there_documented_mental_health_conditions FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Were_there_documented_mental_health_conditions>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Informant_interviews 
    {
        [Newtonsoft.Json.JsonProperty("date_of_interview", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_interview Date_of_interview { get; set; }
    
        [Newtonsoft.Json.JsonProperty("interview_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Interview_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_interview_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_interview_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("age_group", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Age_group { get; set; }
    
        [Newtonsoft.Json.JsonProperty("relationship_to_deceased", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Relationship_to_deceased { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_relationship", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_relationship { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ethnicity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Ethnicity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("race", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Race { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Informant_interviews FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Informant_interviews>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Case_narrative 
    {
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Case_narrative FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Case_narrative>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Committee_review 
    {
        [Newtonsoft.Json.JsonProperty("date_of_review", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date_of_review { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pregnancy_relatedness", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pregnancy_relatedness { get; set; }
    
        [Newtonsoft.Json.JsonProperty("estimate_degree_relevant_information_available", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Estimate_degree_relevant_information_available { get; set; }
    
        [Newtonsoft.Json.JsonProperty("does_committee_agree_with_cod_on_death_certificate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Does_committee_agree_with_cod_on_death_certificate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("committee_determination_of_causes_of_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Committee_determination_of_causes_of_death> Committee_determination_of_causes_of_death { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pmss_mm", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pmss_mm { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pmss_mm_secondary", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pmss_mm_secondary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("did_obesity_contribute_to_the_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Did_obesity_contribute_to_the_death { get; set; }
    
        [Newtonsoft.Json.JsonProperty("did_mental_health_conditions_contribute_to_the_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Did_mental_health_conditions_contribute_to_the_death { get; set; }
    
        [Newtonsoft.Json.JsonProperty("did_substance_use_disorder_contribute_to_the_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Did_substance_use_disorder_contribute_to_the_death { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_this_death_a_sucide", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_this_death_a_sucide { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_this_death_a_homicide", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_this_death_a_homicide { get; set; }
    
        [Newtonsoft.Json.JsonProperty("means_of_fatal_injury", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Means_of_fatal_injury { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_other_means_fatal_injury", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_other_means_fatal_injury { get; set; }
    
        [Newtonsoft.Json.JsonProperty("if_homicide_relationship_of_perpetrator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double If_homicide_relationship_of_perpetrator { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_other_relationship", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_other_relationship { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_this_death_preventable", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_this_death_preventable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("chance_to_alter_outcome", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Chance_to_alter_outcome { get; set; }
    
        [Newtonsoft.Json.JsonProperty("critical_factors_worksheet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Critical_factors_worksheet> Critical_factors_worksheet { get; set; }
    
        [Newtonsoft.Json.JsonProperty("recommendations_of_committee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Recommendations_of_committee> Recommendations_of_committee { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Committee_review FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Committee_review>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Committee_determination_of_causes_of_death 
    {
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("cause_descriptive", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Cause_descriptive { get; set; }
    
        [Newtonsoft.Json.JsonProperty("comments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Comments { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Committee_determination_of_causes_of_death FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Committee_determination_of_causes_of_death>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Critical_factors_worksheet 
    {
        [Newtonsoft.Json.JsonProperty("category", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Category { get; set; }
    
        [Newtonsoft.Json.JsonProperty("class", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Class { get; set; }
    
        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("prevention", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Prevention { get; set; }
    
        [Newtonsoft.Json.JsonProperty("impact_level", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Impact_level { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Critical_factors_worksheet FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Critical_factors_worksheet>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Recommendations_of_committee 
    {
        [Newtonsoft.Json.JsonProperty("prevention", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Prevention { get; set; }
    
        [Newtonsoft.Json.JsonProperty("impact_level", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Impact_level { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Recommendations_of_committee FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Recommendations_of_committee>(data);
        }
    
    }
    
    /// <summary>Here is a case for your ...!</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Mmria_case 
    {
        [Newtonsoft.Json.JsonProperty("_id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string _id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("version", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Mmria_caseVersion Version { get; set; } = AwesomeSauce.v1.Mmria_caseVersion.V1;
    
        [Newtonsoft.Json.JsonProperty("home_record", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Home_record Home_record { get; set; }
    
        [Newtonsoft.Json.JsonProperty("death_certificate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Death_certificate Death_certificate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("birth_fetal_death_certificate_parent", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Birth_fetal_death_certificate_parent Birth_fetal_death_certificate_parent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("birth_certificate_infant_fetal_section", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Birth_certificate_infant_fetal_section> Birth_certificate_infant_fetal_section { get; set; }
    
        [Newtonsoft.Json.JsonProperty("autopsy_report", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Autopsy_report Autopsy_report { get; set; }
    
        [Newtonsoft.Json.JsonProperty("prenatal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Prenatal Prenatal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("er_visit_and_hospital_medical_records", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Er_visit_and_hospital_medical_records> Er_visit_and_hospital_medical_records { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_medical_office_visits", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Other_medical_office_visits> Other_medical_office_visits { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medical_transport", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Medical_transport> Medical_transport { get; set; }
    
        [Newtonsoft.Json.JsonProperty("social_and_environmental_profile", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Social_and_environmental_profile Social_and_environmental_profile { get; set; }
    
        [Newtonsoft.Json.JsonProperty("mental_health_profile", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Mental_health_profile Mental_health_profile { get; set; }
    
        [Newtonsoft.Json.JsonProperty("informant_interviews", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Informant_interviews> Informant_interviews { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_narrative", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Case_narrative Case_narrative { get; set; }
    
        [Newtonsoft.Json.JsonProperty("committee_review", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Committee_review Committee_review { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Mmria_case FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Mmria_case>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_death 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_death FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_death>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Case_progress_report 
    {
        [Newtonsoft.Json.JsonProperty("death_certificate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Death_certificate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("autopsy_report", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Autopsy_report { get; set; }
    
        [Newtonsoft.Json.JsonProperty("birth_certificate_parent_section", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Birth_certificate_parent_section { get; set; }
    
        [Newtonsoft.Json.JsonProperty("birth_certificate_infant_or_fetal_death_section", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Birth_certificate_infant_or_fetal_death_section { get; set; }
    
        [Newtonsoft.Json.JsonProperty("prenatal_care_record", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Prenatal_care_record { get; set; }
    
        [Newtonsoft.Json.JsonProperty("er_visits_and_hospitalizations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Er_visits_and_hospitalizations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_medical_visits", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Other_medical_visits { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medical_transport", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Medical_transport { get; set; }
    
        [Newtonsoft.Json.JsonProperty("social_and_psychological_profile", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Social_and_psychological_profile { get; set; }
    
        [Newtonsoft.Json.JsonProperty("mental_health_profile", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Mental_health_profile { get; set; }
    
        [Newtonsoft.Json.JsonProperty("informant_interviews", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Informant_interviews { get; set; }
    
        [Newtonsoft.Json.JsonProperty("case_narrative", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Case_narrative { get; set; }
    
        [Newtonsoft.Json.JsonProperty("committe_review_worksheet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Committe_review_worksheet { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Case_progress_report FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Case_progress_report>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Certificate_identification 
    {
        [Newtonsoft.Json.JsonProperty("time_of_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.TimeSpan Time_of_death { get; set; }
    
        [Newtonsoft.Json.JsonProperty("local_file_number", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Local_file_number { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state_file_number", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string State_file_number { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Certificate_identification FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Certificate_identification>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Place_of_last_residence 
    {
        [Newtonsoft.Json.JsonProperty("street", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Street { get; set; }
    
        [Newtonsoft.Json.JsonProperty("apartment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Apartment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("country_of_last_residence", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Country_of_last_residence { get; set; }
    
        [Newtonsoft.Json.JsonProperty("zip_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Zip_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("county", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string County { get; set; }
    
        [Newtonsoft.Json.JsonProperty("feature_matching_geography_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Feature_matching_geography_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("urban_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urban_status { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Place_of_last_residence FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Place_of_last_residence>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Demographics 
    {
        [Newtonsoft.Json.JsonProperty("date_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_birth Date_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("age", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Age { get; set; }
    
        [Newtonsoft.Json.JsonProperty("marital_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Marital_status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("country_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Country_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("primary_occupation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Primary_occupation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("occupation_business_industry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Occupation_business_industry { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ever_in_us_armed_forces", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Ever_in_us_armed_forces { get; set; }
    
        [Newtonsoft.Json.JsonProperty("is_of_hispanic_origin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Is_of_hispanic_origin { get; set; }
    
        [Newtonsoft.Json.JsonProperty("education_level", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Education_level { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Demographics FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Demographics>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Race2 
    {
        [Newtonsoft.Json.JsonProperty("race", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Race { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_race", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_race { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_asian", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_asian { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_pacific_islander", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_pacific_islander { get; set; }
    
        [Newtonsoft.Json.JsonProperty("principle_tribe", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Principle_tribe { get; set; }
    
        [Newtonsoft.Json.JsonProperty("omb_race_recode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Omb_race_recode { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Race2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Race2>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Injury_associated_information 
    {
        [Newtonsoft.Json.JsonProperty("date_of_injury", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_injury Date_of_injury { get; set; }
    
        [Newtonsoft.Json.JsonProperty("time_of_injury", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.TimeSpan Time_of_injury { get; set; }
    
        [Newtonsoft.Json.JsonProperty("place_of_injury", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Place_of_injury { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_injury_at_work", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_injury_at_work { get; set; }
    
        [Newtonsoft.Json.JsonProperty("transportation_related_injury", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Transportation_related_injury { get; set; }
    
        [Newtonsoft.Json.JsonProperty("transport_related_other_specify", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Transport_related_other_specify { get; set; }
    
        [Newtonsoft.Json.JsonProperty("were_seat_belts_in_use", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Were_seat_belts_in_use { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Injury_associated_information FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Injury_associated_information>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Address_of_injury 
    {
        [Newtonsoft.Json.JsonProperty("street", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Street { get; set; }
    
        [Newtonsoft.Json.JsonProperty("apartment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Apartment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("zip_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Zip_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("county", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string County { get; set; }
    
        [Newtonsoft.Json.JsonProperty("feature_matching_geography_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Feature_matching_geography_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("urban_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urban_status { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Address_of_injury FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Address_of_injury>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Death_information 
    {
        [Newtonsoft.Json.JsonProperty("death_occured_in_hospital", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Death_occured_in_hospital { get; set; }
    
        [Newtonsoft.Json.JsonProperty("death_outside_of_hospital", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Death_outside_of_hospital { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_death_outside_of_hospital", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_death_outside_of_hospital { get; set; }
    
        [Newtonsoft.Json.JsonProperty("manner_of_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Manner_of_death { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_autopsy_performed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_autopsy_performed { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_autopsy_used_for_death_coding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_autopsy_used_for_death_coding { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pregnancy_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pregnancy_status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("did_tobacco_contribute_to_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Did_tobacco_contribute_to_death { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Death_information FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Death_information>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Address_of_death 
    {
        [Newtonsoft.Json.JsonProperty("place_of_death", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Place_of_death { get; set; }
    
        [Newtonsoft.Json.JsonProperty("street", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Street { get; set; }
    
        [Newtonsoft.Json.JsonProperty("apartment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Apartment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("zip_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Zip_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("county", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string County { get; set; }
    
        [Newtonsoft.Json.JsonProperty("feature_matching_geography_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Feature_matching_geography_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("urban_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urban_status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("estimated_death_distance_from_residence", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Estimated_death_distance_from_residence { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Address_of_death FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Address_of_death>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Facility_of_delivery_demographics 
    {
        [Newtonsoft.Json.JsonProperty("type_of_place", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Type_of_place { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_home_delivery_planned", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_home_delivery_planned { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_delivery", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_delivery Date_of_delivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maternal_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Maternal_level_of_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_maternal_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_maternal_level_of_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("facility_npi_number", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Facility_npi_number { get; set; }
    
        [Newtonsoft.Json.JsonProperty("facility_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Facility_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("attendant_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Attendant_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_attendant_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_attendant_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("attendant_npi", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Attendant_npi { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_mother_transferred", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_mother_transferred { get; set; }
    
        [Newtonsoft.Json.JsonProperty("transferred_from_where", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Transferred_from_where { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Facility_of_delivery_demographics FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Facility_of_delivery_demographics>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Facility_of_delivery_location 
    {
        [Newtonsoft.Json.JsonProperty("street", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Street { get; set; }
    
        [Newtonsoft.Json.JsonProperty("apartment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Apartment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("zip_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Zip_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("county", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string County { get; set; }
    
        [Newtonsoft.Json.JsonProperty("feature_matching_geography_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Feature_matching_geography_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("urban_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urban_status { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Facility_of_delivery_location FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Facility_of_delivery_location>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Demographic_of_father 
    {
        [Newtonsoft.Json.JsonProperty("date_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_birth2 Date_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("age", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Age { get; set; }
    
        [Newtonsoft.Json.JsonProperty("education_level", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Education_level { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("father_country_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Father_country_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("primary_occupation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Primary_occupation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("occupation_business_industry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Occupation_business_industry { get; set; }
    
        [Newtonsoft.Json.JsonProperty("is_father_of_hispanic_origin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Is_father_of_hispanic_origin { get; set; }
    
        [Newtonsoft.Json.JsonProperty("race", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Race4 Race { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Demographic_of_father FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Demographic_of_father>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Record_identification 
    {
        [Newtonsoft.Json.JsonProperty("first_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string First_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("middle_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Middle_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("last_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Last_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maiden_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Maiden_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medical_record_number", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Medical_record_number { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Record_identification FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Record_identification>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Demographic_of_mother 
    {
        [Newtonsoft.Json.JsonProperty("date_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_birth3 Date_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("age", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Age { get; set; }
    
        [Newtonsoft.Json.JsonProperty("mother_married", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Mother_married { get; set; }
    
        [Newtonsoft.Json.JsonProperty("if_mother_not_married_has_paternity_acknowledgement_been_signed_in_the_hospital", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double If_mother_not_married_has_paternity_acknowledgement_been_signed_in_the_hospital { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("country_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Country_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("primary_occupation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Primary_occupation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("occupation_business_industry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Occupation_business_industry { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ever_in_us_armed_forces", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Ever_in_us_armed_forces { get; set; }
    
        [Newtonsoft.Json.JsonProperty("is_of_hispanic_origin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Is_of_hispanic_origin { get; set; }
    
        [Newtonsoft.Json.JsonProperty("education_level", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Education_level { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Demographic_of_mother FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Demographic_of_mother>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Location_of_residence 
    {
        [Newtonsoft.Json.JsonProperty("street", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Street { get; set; }
    
        [Newtonsoft.Json.JsonProperty("apartment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Apartment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("zip_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Zip_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("county", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string County { get; set; }
    
        [Newtonsoft.Json.JsonProperty("feature_matching_geography_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Feature_matching_geography_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("urban_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urban_status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("estimated_distance_from_residence", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Estimated_distance_from_residence { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Location_of_residence FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Location_of_residence>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Race3 
    {
        [Newtonsoft.Json.JsonProperty("race_of_mother", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Race_of_mother { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_race", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_race { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_asian", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_asian { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_pacific_islander", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_pacific_islander { get; set; }
    
        [Newtonsoft.Json.JsonProperty("principle_tribe", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Principle_tribe { get; set; }
    
        [Newtonsoft.Json.JsonProperty("omb_race_recode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Race3Omb_race_recode Omb_race_recode { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Race3 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Race3>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Pregnancy_history 
    {
        [Newtonsoft.Json.JsonProperty("date_of_last_live_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_last_live_birth Date_of_last_live_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("live_birth_interval", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Live_birth_interval { get; set; }
    
        [Newtonsoft.Json.JsonProperty("number_of_previous_live_births", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Number_of_previous_live_births { get; set; }
    
        [Newtonsoft.Json.JsonProperty("now_living", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Now_living { get; set; }
    
        [Newtonsoft.Json.JsonProperty("now_dead", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Now_dead { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_outcomes", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Other_outcomes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_last_other_outcome", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_last_other_outcome Date_of_last_other_outcome { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pregnancy_interval", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Pregnancy_interval { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Pregnancy_history FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Pregnancy_history>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Maternal_biometrics 
    {
        [Newtonsoft.Json.JsonProperty("height_feet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Height_feet { get; set; }
    
        [Newtonsoft.Json.JsonProperty("height_inches", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Height_inches { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pre_pregnancy_weight", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pre_pregnancy_weight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("weight_at_delivery", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Weight_at_delivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("weight_gain", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Weight_gain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("bmi", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Bmi { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Maternal_biometrics FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Maternal_biometrics>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Prenatal_care 
    {
        [Newtonsoft.Json.JsonProperty("date_of_last_normal_menses", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_last_normal_menses Date_of_last_normal_menses { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_1st_prenatal_visit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_1st_prenatal_visit Date_of_1st_prenatal_visit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_last_prenatal_visit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_last_prenatal_visit Date_of_last_prenatal_visit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("calculated_gestation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Calculated_gestation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("calculated_gestation_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Calculated_gestation_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("obsteric_estimate_of_gestation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Obsteric_estimate_of_gestation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("plurality", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Plurality { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_if_greater_than_3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_if_greater_than_3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_wic_used", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_wic_used { get; set; }
    
        [Newtonsoft.Json.JsonProperty("principal_source_of_payment_for_this_delivery", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Principal_source_of_payment_for_this_delivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_other_payor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_other_payor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("trimester_of_1st_prenatal_care_visit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Trimester_of_1st_prenatal_care_visit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("number_of_visits", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Number_of_visits { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Prenatal_care FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Prenatal_care>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Cigarette_smoking 
    {
        [Newtonsoft.Json.JsonProperty("prior_3_months", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Prior_3_months { get; set; }
    
        [Newtonsoft.Json.JsonProperty("prior_3_months_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Prior_3_months_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("trimester_1st", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Trimester_1st { get; set; }
    
        [Newtonsoft.Json.JsonProperty("trimester_1st_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Trimester_1st_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("trimester_2nd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Trimester_2nd { get; set; }
    
        [Newtonsoft.Json.JsonProperty("trimester_2nd_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Trimester_2nd_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("trimester_3rd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Trimester_3rd { get; set; }
    
        [Newtonsoft.Json.JsonProperty("trimester_3rd_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Trimester_3rd_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("none_or_not_specified", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double None_or_not_specified { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Cigarette_smoking FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Cigarette_smoking>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Risk_factors 
    {
        [Newtonsoft.Json.JsonProperty("risk_factors_in_this_pregnancy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Risk_factors_in_this_pregnancy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("number_of_c_sections", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Number_of_c_sections { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Risk_factors FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Risk_factors>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Record_identification2 
    {
        [Newtonsoft.Json.JsonProperty("state_file_number", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string State_file_number { get; set; }
    
        [Newtonsoft.Json.JsonProperty("local_file_number", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Local_file_number { get; set; }
    
        [Newtonsoft.Json.JsonProperty("newborn_medical_record_number", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Newborn_medical_record_number { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_delivery", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date_of_delivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("time_of_delivery", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.TimeSpan Time_of_delivery { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Record_identification2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Record_identification2>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Biometrics_and_demographics 
    {
        [Newtonsoft.Json.JsonProperty("birth_weight", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Birth_weight Birth_weight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gender", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gender { get; set; }
    
        [Newtonsoft.Json.JsonProperty("apgar_scores", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Apgar_scores Apgar_scores { get; set; }
    
        [Newtonsoft.Json.JsonProperty("is_infant_living_at_time_of_report", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Is_infant_living_at_time_of_report { get; set; }
    
        [Newtonsoft.Json.JsonProperty("is_infant_being_breastfed_at_discharge", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Is_infant_being_breastfed_at_discharge { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_infant_transferred_within_24_hours", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_infant_transferred_within_24_hours { get; set; }
    
        [Newtonsoft.Json.JsonProperty("facility_city_state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Facility_city_state { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Biometrics_and_demographics FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Biometrics_and_demographics>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Method_of_delivery 
    {
        [Newtonsoft.Json.JsonProperty("was_delivery_with_forceps_attempted_but_unsuccessful", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_delivery_with_forceps_attempted_but_unsuccessful { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_delivery_with_vacuum_extration_attempted_but_unsuccessful", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_delivery_with_vacuum_extration_attempted_but_unsuccessful { get; set; }
    
        [Newtonsoft.Json.JsonProperty("fetal_delivery", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Fetal_delivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_presentation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_presentation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("final_route_and_method_of_delivery", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Final_route_and_method_of_delivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("if_cesarean_was_trial_of_labor_attempted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double If_cesarean_was_trial_of_labor_attempted { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Method_of_delivery FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Method_of_delivery>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Reporter_characteristics 
    {
        [Newtonsoft.Json.JsonProperty("reporter_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Reporter_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_specify", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_specify { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_autopsy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_autopsy Date_of_autopsy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("jurisdiction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Jurisdiction { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Reporter_characteristics FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Reporter_characteristics>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Biometrics 
    {
        [Newtonsoft.Json.JsonProperty("mother", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Mother Mother { get; set; }
    
        [Newtonsoft.Json.JsonProperty("fetus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Fetus Fetus { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Biometrics FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Biometrics>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Relevant_maternal_death_findings 
    {
        [Newtonsoft.Json.JsonProperty("gross_findings", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Gross_findings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("microscopic_findings", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Microscopic_findings { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Relevant_maternal_death_findings FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Relevant_maternal_death_findings>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Primary_prenatal_care_facility 
    {
        [Newtonsoft.Json.JsonProperty("place_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Place_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_place_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_place_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("primary_provider_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Primary_provider_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_other_provider_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_other_provider_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("principal_source_of_payment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Principal_source_of_payment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_payment_source", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_payment_source { get; set; }
    
        [Newtonsoft.Json.JsonProperty("is_use_wic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Is_use_wic { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Primary_prenatal_care_facility FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Primary_prenatal_care_facility>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Location_of_primary_prenatal_care_facility 
    {
        [Newtonsoft.Json.JsonProperty("street", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Street { get; set; }
    
        [Newtonsoft.Json.JsonProperty("apartment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Apartment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("zip_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Zip_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("county", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string County { get; set; }
    
        [Newtonsoft.Json.JsonProperty("feature_matching_geography_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Feature_matching_geography_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("urban_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urban_status { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Location_of_primary_prenatal_care_facility FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Location_of_primary_prenatal_care_facility>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Pregnancy_history2 
    {
        [Newtonsoft.Json.JsonProperty("gravida", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gravida { get; set; }
    
        [Newtonsoft.Json.JsonProperty("para", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Para { get; set; }
    
        [Newtonsoft.Json.JsonProperty("abortions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Abortions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("details_grid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Details_grid Details_grid { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Pregnancy_history2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Pregnancy_history2>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Intendedenes 
    {
        [Newtonsoft.Json.JsonProperty("was_pregnancy_planned", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_pregnancy_planned { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_patient_using_birth_control", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_patient_using_birth_control { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_birth_control_was_discontinued", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_birth_control_was_discontinued Date_birth_control_was_discontinued { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Intendedenes FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Intendedenes>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Infertility_treatment 
    {
        [Newtonsoft.Json.JsonProperty("was_pregnancy_result_of_infertility_treatment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_pregnancy_result_of_infertility_treatment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("fertility_enhanding_drugs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Fertility_enhanding_drugs { get; set; }
    
        [Newtonsoft.Json.JsonProperty("assisted_reproductive_technology", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Assisted_reproductive_technology { get; set; }
    
        [Newtonsoft.Json.JsonProperty("art_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Art_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_other_art_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_other_art_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("cycle_number", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Cycle_number { get; set; }
    
        [Newtonsoft.Json.JsonProperty("embryos_transferred", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Embryos_transferred { get; set; }
    
        [Newtonsoft.Json.JsonProperty("embryos_growing", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Embryos_growing { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Infertility_treatment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Infertility_treatment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Current_pregnancy 
    {
        [Newtonsoft.Json.JsonProperty("date_of_last_normal_menses", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_last_normal_menses2 Date_of_last_normal_menses { get; set; }
    
        [Newtonsoft.Json.JsonProperty("estimated_date_of_confinement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Estimated_date_of_confinement Estimated_date_of_confinement { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_1st_prenatal_visit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_1st_prenatal_visit2 Date_of_1st_prenatal_visit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_1st_ultrasound", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_1st_ultrasound Date_of_1st_ultrasound { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_last_prenatal_visit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_last_prenatal_visit2 Date_of_last_prenatal_visit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("height", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Height Height { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pre_pregnancy_weight", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pre_pregnancy_weight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("bmi", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Bmi { get; set; }
    
        [Newtonsoft.Json.JsonProperty("weight_at_1st_visit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Weight_at_1st_visit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("weight_at_last_visit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Weight_at_last_visit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("weight_gain", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Weight_gain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("total_number_of_visits", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Total_number_of_visits { get; set; }
    
        [Newtonsoft.Json.JsonProperty("trimester_of_first_pnc_visit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Trimester_of_first_pnc_visit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("number_of_fetuses", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Number_of_fetuses { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_home_delivery_planned", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_home_delivery_planned { get; set; }
    
        [Newtonsoft.Json.JsonProperty("attended_prenatal_visits_alone", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Attended_prenatal_visits_alone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("intended_birthing_facility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Intended_birthing_facility { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Current_pregnancy FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Current_pregnancy>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Highest_blood_pressure 
    {
        [Newtonsoft.Json.JsonProperty("systolic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Systolic { get; set; }
    
        [Newtonsoft.Json.JsonProperty("diastolic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Diastolic { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Highest_blood_pressure FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Highest_blood_pressure>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Maternal_record_identification 
    {
        [Newtonsoft.Json.JsonProperty("first_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string First_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("middle_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Middle_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("last_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Last_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maiden_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Maiden_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medical_record_no", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Medical_record_no { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Maternal_record_identification FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Maternal_record_identification>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Basic_admission_and_discharge_information 
    {
        [Newtonsoft.Json.JsonProperty("date_of_arrival", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_arrival Date_of_arrival { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_hospital_admission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_hospital_admission Date_of_hospital_admission { get; set; }
    
        [Newtonsoft.Json.JsonProperty("admission_condition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Admission_condition { get; set; }
    
        [Newtonsoft.Json.JsonProperty("admission_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Admission_status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("admission_status_other", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Admission_status_other { get; set; }
    
        [Newtonsoft.Json.JsonProperty("admission_reason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Admission_reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("admission_reason_other", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Admission_reason_other { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_recieved_from_another_hospital", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_recieved_from_another_hospital { get; set; }
    
        [Newtonsoft.Json.JsonProperty("from_where", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string From_where { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_transferred_to_another_hospital", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_transferred_to_another_hospital { get; set; }
    
        [Newtonsoft.Json.JsonProperty("to_where", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string To_where { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_hospital_discharge", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_hospital_discharge Date_of_hospital_discharge { get; set; }
    
        [Newtonsoft.Json.JsonProperty("discharge_pregnancy_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Discharge_pregnancy_status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("deceased_at_discharge", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Deceased_at_discharge { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Basic_admission_and_discharge_information FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Basic_admission_and_discharge_information>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Name_and_location_facility 
    {
        [Newtonsoft.Json.JsonProperty("facility_name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Facility_name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("type_of_facility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Type_of_facility { get; set; }
    
        [Newtonsoft.Json.JsonProperty("facility_npi_no", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Facility_npi_no { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maternal_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Maternal_level_of_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_maternal_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_maternal_level_of_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("street", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Street { get; set; }
    
        [Newtonsoft.Json.JsonProperty("apartment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Apartment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("zip_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Zip_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("county", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string County { get; set; }
    
        [Newtonsoft.Json.JsonProperty("feature_matching_geography_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Feature_matching_geography_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("urban_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urban_status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("mode_of_transportation_to_facility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Mode_of_transportation_to_facility { get; set; }
    
        [Newtonsoft.Json.JsonProperty("mode_of_transportation_to_facility_other", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Mode_of_transportation_to_facility_other { get; set; }
    
        [Newtonsoft.Json.JsonProperty("origin_of_travel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Origin_of_travel { get; set; }
    
        [Newtonsoft.Json.JsonProperty("origin_of_travel_other", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Origin_of_travel_other { get; set; }
    
        [Newtonsoft.Json.JsonProperty("travel_time_to_hospital", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Travel_time_to_hospital Travel_time_to_hospital { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Name_and_location_facility FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Name_and_location_facility>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Maternal_biometrics2 
    {
        [Newtonsoft.Json.JsonProperty("admission_weight", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Admission_weight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("height", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Height2 Height { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Maternal_biometrics2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Maternal_biometrics2>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Onset_of_labor 
    {
        [Newtonsoft.Json.JsonProperty("date_of_onset_of_labor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_onset_of_labor Date_of_onset_of_labor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("date_of_rupture", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_rupture Date_of_rupture { get; set; }
    
        [Newtonsoft.Json.JsonProperty("final_delivery_route", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Final_delivery_route { get; set; }
    
        [Newtonsoft.Json.JsonProperty("onset_of_labor_was", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Onset_of_labor_was { get; set; }
    
        [Newtonsoft.Json.JsonProperty("multiple_gestation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Multiple_gestation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pregnancy_outcome", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pregnancy_outcome { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Onset_of_labor FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Onset_of_labor>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Highest_bp 
    {
        [Newtonsoft.Json.JsonProperty("systolic_bp", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Systolic_bp { get; set; }
    
        [Newtonsoft.Json.JsonProperty("diastolic_bp", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Diastolic_bp { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Highest_bp FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Highest_bp>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Visit 
    {
        [Newtonsoft.Json.JsonProperty("date_of_medical_office_visit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Date_of_medical_office_visit Date_of_medical_office_visit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("visit_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Visit_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("medical_record_no", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Medical_record_no { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reason_for_visit_or_chief_complaint", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reason_for_visit_or_chief_complaint { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Visit FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Visit>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Medical_care_facility 
    {
        [Newtonsoft.Json.JsonProperty("place_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Place_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_other_place_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_other_place_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("provider_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Provider_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_other_provider_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_other_provider_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("payment_source", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Payment_source { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_payment_source", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_payment_source { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pregnancy_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pregnancy_status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("was_this_provider_her_primary_prenatal_care_provider", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Was_this_provider_her_primary_prenatal_care_provider { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Medical_care_facility FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Medical_care_facility>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Location_of_medical_care_facility 
    {
        [Newtonsoft.Json.JsonProperty("street", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Street { get; set; }
    
        [Newtonsoft.Json.JsonProperty("apartment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Apartment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("zip_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Zip_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("county", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string County { get; set; }
    
        [Newtonsoft.Json.JsonProperty("feature_matching_geography_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Feature_matching_geography_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("naaccr_census_tract_certainty_type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Naaccr_census_tract_certainty_type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("urban_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urban_status { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Location_of_medical_care_facility FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Location_of_medical_care_facility>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_transport 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("days_postpartum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Days_postpartum { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_transport FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_transport>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Timing_of_transport 
    {
        [Newtonsoft.Json.JsonProperty("call_received", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Call_received { get; set; }
    
        [Newtonsoft.Json.JsonProperty("depart_for_patient_origin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Depart_for_patient_origin { get; set; }
    
        [Newtonsoft.Json.JsonProperty("arrive_at_patient_origin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Arrive_at_patient_origin { get; set; }
    
        [Newtonsoft.Json.JsonProperty("patient_contact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Patient_contact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("depart_for_referring_facility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Depart_for_referring_facility { get; set; }
    
        [Newtonsoft.Json.JsonProperty("arrive_at_referring_facility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Arrive_at_referring_facility { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Timing_of_transport FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Timing_of_transport>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Origin_information 
    {
        [Newtonsoft.Json.JsonProperty("place_of_origin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Place_of_origin { get; set; }
    
        [Newtonsoft.Json.JsonProperty("trauma_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Trauma_level_of_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_trauma_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_trauma_level_of_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maternal_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Maternal_level_of_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_maternal_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_maternal_level_of_care { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Origin_information FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Origin_information>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Destination_information 
    {
        [Newtonsoft.Json.JsonProperty("place_of_destination", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Place_of_destination { get; set; }
    
        [Newtonsoft.Json.JsonProperty("trauma_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Trauma_level_of_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_trauma_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_trauma_level_of_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maternal_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Maternal_level_of_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_maternal_level_of_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_maternal_level_of_care { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Destination_information FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Destination_information>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Socio_economic_characteristics 
    {
        [Newtonsoft.Json.JsonProperty("source_of_income", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Source_of_income { get; set; }
    
        [Newtonsoft.Json.JsonProperty("employment_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Employment_status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("occupation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Occupation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("country_of_birth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Country_of_birth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("immigration_status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Immigration_status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("time_in_the_us", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Time_in_the_us { get; set; }
    
        [Newtonsoft.Json.JsonProperty("time_in_the_us_units", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Time_in_the_us_units { get; set; }
    
        [Newtonsoft.Json.JsonProperty("current_living_arrangements", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Current_living_arrangements { get; set; }
    
        [Newtonsoft.Json.JsonProperty("homelessness", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Homelessness { get; set; }
    
        [Newtonsoft.Json.JsonProperty("religious_preference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Religious_preference { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Socio_economic_characteristics FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Socio_economic_characteristics>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Health_care_access 
    {
        [Newtonsoft.Json.JsonProperty("barriers_to_health_care_access", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Barriers_to_health_care_access { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Health_care_access FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Health_care_access>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Communications 
    {
        [Newtonsoft.Json.JsonProperty("barriers_to_communications", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Barriers_to_communications { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Communications FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Communications>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Social_or_emotional_stress 
    {
        [Newtonsoft.Json.JsonProperty("evidence_of_social_or_emotional_stress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Evidence_of_social_or_emotional_stress { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_other_evidence_stress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_other_evidence_stress { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Social_or_emotional_stress FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Social_or_emotional_stress>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Health_care_system 
    {
        [Newtonsoft.Json.JsonProperty("no_prenatal_care", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double No_prenatal_care { get; set; }
    
        [Newtonsoft.Json.JsonProperty("reasons_for_missed_appointments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Reasons_for_missed_appointments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("specify_other_reason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Specify_other_reason { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Health_care_system FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Health_care_system>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_interview 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_interview FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_interview>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Mmria_caseVersion
    {
        [System.Runtime.Serialization.EnumMember(Value = @"v1")]
        V1 = 0,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_birth 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_birth FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_birth>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_injury 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_injury FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_injury>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_delivery 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_delivery FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_delivery>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_birth2 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_birth2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_birth2>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Race4 
    {
        [Newtonsoft.Json.JsonProperty("race_of_father", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Race_of_father { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_race", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_race { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_asian", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_asian { get; set; }
    
        [Newtonsoft.Json.JsonProperty("other_pacific_islander", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Other_pacific_islander { get; set; }
    
        [Newtonsoft.Json.JsonProperty("principle_tribe", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Principle_tribe { get; set; }
    
        [Newtonsoft.Json.JsonProperty("omb_race_recode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Race4Omb_race_recode Omb_race_recode { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Race4 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Race4>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_birth3 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_birth3 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_birth3>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Race3Omb_race_recode
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        White = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        Black = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        American_Indian_Alaska_Native = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        Pacific_Islander = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        Asian = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"5")]
        BiRacial = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"6")]
        MultiRacial = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"8888")]
        Race_Not_Specified = 8,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_last_live_birth 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_last_live_birth FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_last_live_birth>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_last_other_outcome 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_last_other_outcome FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_last_other_outcome>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_last_normal_menses 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_last_normal_menses FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_last_normal_menses>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_1st_prenatal_visit 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_1st_prenatal_visit FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_1st_prenatal_visit>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_last_prenatal_visit 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_last_prenatal_visit FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_last_prenatal_visit>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Birth_weight 
    {
        [Newtonsoft.Json.JsonProperty("unit_of_measurement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Unit_of_measurement { get; set; }
    
        [Newtonsoft.Json.JsonProperty("grams_or_pounds", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Grams_or_pounds { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ounces", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Ounces { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Birth_weight FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Birth_weight>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Apgar_scores 
    {
        [Newtonsoft.Json.JsonProperty("minute_5", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Minute_5 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("minute_10", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Minute_10 { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Apgar_scores FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Apgar_scores>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_autopsy 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_autopsy FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_autopsy>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Mother 
    {
        [Newtonsoft.Json.JsonProperty("height", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Height3 Height { get; set; }
    
        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Weight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("bmi", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Bmi { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Mother FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Mother>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Fetus 
    {
        [Newtonsoft.Json.JsonProperty("fetal_weight", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Fetal_weight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("fetal_length", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Fetal_length { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_estimate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_estimate { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Fetus FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Fetus>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Details_grid 
    {
        [Newtonsoft.Json.JsonProperty("date_ended", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date_ended { get; set; }
    
        [Newtonsoft.Json.JsonProperty("outcome", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Outcome { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age { get; set; }
    
        [Newtonsoft.Json.JsonProperty("birth_weight", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Birth_weight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("method_of_delivery", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Method_of_delivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("complications", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Complications { get; set; }
    
        [Newtonsoft.Json.JsonProperty("is_now_living", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Is_now_living { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Details_grid FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Details_grid>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_birth_control_was_discontinued 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_birth_control_was_discontinued FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_birth_control_was_discontinued>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_last_normal_menses2 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_last_normal_menses2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_last_normal_menses2>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Estimated_date_of_confinement 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        [Newtonsoft.Json.JsonProperty("estimate_based_on", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Estimate_based_on { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Estimated_date_of_confinement FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Estimated_date_of_confinement>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_1st_prenatal_visit2 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_1st_prenatal_visit2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_1st_prenatal_visit2>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_1st_ultrasound 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_at_first_ultrasound", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_at_first_ultrasound { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_at_first_ultrasound_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_at_first_ultrasound_days { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_1st_ultrasound FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_1st_ultrasound>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_last_prenatal_visit2 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_at_last_prenatal_visit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_at_last_prenatal_visit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_at_last_prenatal_visit_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_at_last_prenatal_visit_days { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_last_prenatal_visit2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_last_prenatal_visit2>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Height 
    {
        [Newtonsoft.Json.JsonProperty("feet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Feet { get; set; }
    
        [Newtonsoft.Json.JsonProperty("inches", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Inches { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Height FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Height>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_arrival 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        [Newtonsoft.Json.JsonProperty("time_of_arrival", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.TimeSpan Time_of_arrival { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("days_postpartum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Days_postpartum { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_arrival FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_arrival>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_hospital_admission 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        [Newtonsoft.Json.JsonProperty("time_of_admission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.TimeSpan Time_of_admission { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("days_postpartum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Days_postpartum { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_hospital_admission FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_hospital_admission>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_hospital_discharge 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        [Newtonsoft.Json.JsonProperty("time_of_discharge", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.TimeSpan Time_of_discharge { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("days_postpartum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Days_postpartum { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_hospital_discharge FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_hospital_discharge>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Travel_time_to_hospital 
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Value { get; set; }
    
        [Newtonsoft.Json.JsonProperty("unit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Unit { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Travel_time_to_hospital FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Travel_time_to_hospital>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Height2 
    {
        [Newtonsoft.Json.JsonProperty("feet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Feet { get; set; }
    
        [Newtonsoft.Json.JsonProperty("inches", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Inches { get; set; }
    
        [Newtonsoft.Json.JsonProperty("bmi", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Bmi { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Height2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Height2>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_onset_of_labor 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        [Newtonsoft.Json.JsonProperty("time_of_onset_of_labor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.TimeSpan Time_of_onset_of_labor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("duration_of_labor_prior_to_arrival", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Duration_of_labor_prior_to_arrival { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_onset_of_labor FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_onset_of_labor>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_rupture 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        [Newtonsoft.Json.JsonProperty("time_of_rupture", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.TimeSpan Time_of_rupture { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_rupture FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_rupture>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Date_of_medical_office_visit 
    {
        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Month { get; set; }
    
        [Newtonsoft.Json.JsonProperty("day", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Day { get; set; }
    
        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Year { get; set; }
    
        [Newtonsoft.Json.JsonProperty("arrival_time", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.TimeSpan Arrival_time { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_weeks", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_weeks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gestational_age_days", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Gestational_age_days { get; set; }
    
        [Newtonsoft.Json.JsonProperty("days_postpartum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Days_postpartum { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Date_of_medical_office_visit FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Date_of_medical_office_visit>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public enum Race4Omb_race_recode
    {
        [System.Runtime.Serialization.EnumMember(Value = @"9999")]
        _blank_ = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        White = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        Black = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        American_Indian_Alaska_Native = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        Pacific_Islander = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        Asian = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"5")]
        BiRacial = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"6")]
        MultiRacial = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"8888")]
        Race_Not_Specified = 8,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    public partial class Height3 
    {
        [Newtonsoft.Json.JsonProperty("feet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Feet { get; set; }
    
        [Newtonsoft.Json.JsonProperty("inches", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Inches { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Height3 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Height3>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.20.0 (Newtonsoft.Json v10.0.0.0)")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }
}