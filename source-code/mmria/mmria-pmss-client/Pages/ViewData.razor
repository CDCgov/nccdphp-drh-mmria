@page "/view-data"
@inject IHttpClientFactory httpFactory

<h1>View Data</h1>
<h2>@CurrentForm</h2>

<p>This component demonstrates fetching data from the server.</p>

@if (metadata == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul>
    @foreach (var item in metadata.children.Where(x=> x.type == "form"))
    {
        <li>

            <button @onclick="@(e=> NavButtonClick(e, @item.name))">
                @item.prompt
            </button>
        </li>    
    }
    </ul>
    
    <section style="display:block;position:absolute;">
     <MetadataForm Metadata="@selected_node" UI_Specification="@ui_specification"> </MetadataForm>

    </section>
}

@code 
{
    
    public string CurrentForm { get; set; } = "Test";

    mmria.common.metadata.node selected_node;

    mmria.common.metadata.app metadata;
    mmria.common.metadata.UI_Specification ui_specification;

    protected override async Task OnInitializedAsync()
    {
        System.Console.WriteLine("OnInitializedAsync");
        metadata = await GetMetadata();
        ui_specification = await GetUI_Specification();
        selected_node = metadata.children.Where(x=> x.type == "form").FirstOrDefault();
        
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }


    async Task<mmria.common.metadata.app> GetMetadata()
    {
        var client = httpFactory.CreateClient("base_client");

        var response = await client.GetStringAsync("metadata/mmria-pmss-builder");

        System.Console.WriteLine(response.Substring(0, 100));

        var result = System.Text.Json.JsonSerializer.Deserialize<mmria.common.metadata.app>(response);

        return result;
    }


    async Task<mmria.common.metadata.UI_Specification> GetUI_Specification()
    {
        var client = httpFactory.CreateClient("base_client");

        var response = await client.GetStringAsync("metadata/ui_specification");

        System.Console.WriteLine(response.Substring(0, 100));

        var result = System.Text.Json.JsonSerializer.Deserialize<mmria.common.metadata.UI_Specification>(response);

        return result;
    }
    void NavButtonClick(MouseEventArgs e, string tab)
    {
        CurrentForm = tab;
        selected_node = metadata.children.Where(x=> x.type == "form" && x.name == tab).FirstOrDefault();

    }

    
    string get_style_string(string p_style_string)
    {
        //"{"position":"absolute","top":12,"left":8,"height":50,"width":110.219,"font-weight":"400","font-size":"16px","font-style":"normal","color":"rgb(0, 0, 0)"}"
        var result = p_style_string.Substring(1);

        result = result.Replace("\"", "").Replace("{","").Replace("}","").Replace(",", ";");

        return result;
    }

}
